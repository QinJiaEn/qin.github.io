{"title":"web总结","slug":"web总结","date":"2023-05-12T08:32:18.000Z","updated":"2023-05-12T08:40:08.719Z","comments":true,"path":"api/articles/web总结.json","excerpt":null,"covers":null,"content":"<h1 id=\"Day01-HTML-amp-CSS-amp-JS\"><a href=\"#Day01-HTML-amp-CSS-amp-JS\" class=\"headerlink\" title=\"Day01 - HTML&amp;CSS&amp;JS\"></a>Day01 - HTML&amp;CSS&amp;JS</h1><h2 id=\"1-web\"><a href=\"#1-web\" class=\"headerlink\" title=\"1.web\"></a>1.web</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是web？</span><br><span class=\"line\">\t万维网，浏览器可以访问的网站</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-HTML\"><a href=\"#2-HTML\" class=\"headerlink\" title=\"2.HTML\"></a>2.HTML</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是HTML？</span><br><span class=\"line\">\t超文本标记语言</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTML的作用？</span><br><span class=\"line\">\t控制 网页结构</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-HTML基础标签\"><a href=\"#2-1-HTML基础标签\" class=\"headerlink\" title=\"2.1 HTML基础标签\"></a>2.1 HTML基础标签</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【文本标签】</span><br><span class=\"line\">\t标题：&lt;h1&gt; &lt;h6&gt;</span><br><span class=\"line\">\t定义文本颜色、大小、字体：&lt;font color=&quot;&quot; size=&quot;&quot; face=&quot;&quot;&gt;</span><br><span class=\"line\">\t斜体：&lt;i&gt;</span><br><span class=\"line\">\t加粗：&lt;b&gt;</span><br><span class=\"line\">\t下划线：&lt;u&gt;</span><br><span class=\"line\">\t居中：&lt;center&gt;</span><br><span class=\"line\">\t段落：&lt;p&gt;</span><br><span class=\"line\">\t换行：&lt;br&gt;</span><br><span class=\"line\">\t水平线：&lt;hr&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【图片及音视频标签】</span><br><span class=\"line\">\t图片：&lt;img src=&quot;&quot; height=&quot;&quot; width=&quot;&quot;&gt;</span><br><span class=\"line\">\t音频：&lt;audio src=&quot;&quot; controls&gt;</span><br><span class=\"line\">\t视频：&lt;video src=&quot;&quot; controls&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【超链接及表格标签】</span><br><span class=\"line\">\t超链接：&lt;a href=&quot;&quot; target=&quot;&quot;&gt;</span><br><span class=\"line\">\t表格：&lt;table&gt;</span><br><span class=\"line\">\t\t行：&lt;tr&gt;</span><br><span class=\"line\">\t\t单元格：&lt;td&gt;</span><br><span class=\"line\">\t\t表头：&lt;th&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【布局标签】</span><br><span class=\"line\">\t定义html中区域：&lt;div&gt;</span><br><span class=\"line\">\t定义行内元素：&lt;span&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-2-HTML表单标签\"><a href=\"#2-2-HTML表单标签\" class=\"headerlink\" title=\"2.2 HTML表单标签\"></a>2.2 HTML表单标签</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【表单】：&lt;form action=&quot;&quot; method=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【GET和POST的区别】：</span><br><span class=\"line\">\tGET：表单数据拼接到url后，有大小限制</span><br><span class=\"line\">\tPOST：表单数据封装到请求体中，无大小限制</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【表单项】：</span><br><span class=\"line\">\t&lt;input&gt;：表单项，通过type来控制输入形式</span><br><span class=\"line\">\t\t文本输入框：text</span><br><span class=\"line\">\t\t密码：password</span><br><span class=\"line\">\t\t单选按钮：radio</span><br><span class=\"line\">\t\t复选框：checkbox</span><br><span class=\"line\">\t\t文件：file</span><br><span class=\"line\">\t\t隐藏域：hidden</span><br><span class=\"line\">\t\t提交按钮：submit</span><br><span class=\"line\">\t\t重置按钮：reset</span><br><span class=\"line\">\t\t可点击按钮：button</span><br><span class=\"line\">\t&lt;select&gt;：下拉列表，多个&lt;option&gt;指定下拉列表具体内容</span><br><span class=\"line\">\t&lt;textarea&gt;：文本域</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-CSS\"><a href=\"#3-CSS\" class=\"headerlink\" title=\"3. CSS\"></a>3. CSS</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CSS的作用？</span><br><span class=\"line\">\t控制页面的样式</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CSS三种引入方式？</span><br><span class=\"line\">\t内联方式：直接在标签中使用style属性配置样式</span><br><span class=\"line\">\t内部方式：在head标签中使用&lt;style&gt;标签定义样式</span><br><span class=\"line\">\t外部方式：在head标签中使用&lt;link&gt;标签引入外部css文件 从而引入样式</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CSS三种选择器</span><br><span class=\"line\">\t元素选择器：所有使用了该标签的元素 都会适配 定义的样式 div&#123;&#125;</span><br><span class=\"line\">\tid选择器：唯一，只能选择上一个元素  #id名&#123;&#125;</span><br><span class=\"line\">\tclass选择器：可以选择一类元素，也就是多个元素 .class名&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-JS\"><a href=\"#4-JS\" class=\"headerlink\" title=\"4. JS\"></a>4. JS</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS的作用？</span><br><span class=\"line\">\t控制网页的行为</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS的书写语法？</span><br><span class=\"line\">\t1.区分大小写</span><br><span class=\"line\">\t2.行尾的可有可无 建议写上</span><br><span class=\"line\">\t3.注释 单行注释//  多行注释 /* */</span><br><span class=\"line\">\t4.&#123;&#125;代表代码块</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS声明变量的关键字？</span><br><span class=\"line\">\t全局变量 var</span><br><span class=\"line\">\t局部变量 let</span><br><span class=\"line\">\t常量 const</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS控制语句 哪些会返回false？</span><br><span class=\"line\">\t0、NaN、空字符串、null、undefined 都返回false，其余都返回 true</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day02-JS-amp-Vue\"><a href=\"#Day02-JS-amp-Vue\" class=\"headerlink\" title=\"Day02 - JS &amp; Vue\"></a>Day02 - JS &amp; Vue</h1><h2 id=\"1-函数定义\"><a href=\"#1-函数定义\" class=\"headerlink\" title=\"1. 函数定义\"></a>1. 函数定义</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS中函数定义的两种方式？</span><br><span class=\"line\">function add(a,b)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var add = function(a,b)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-JS中的对象\"><a href=\"#2-JS中的对象\" class=\"headerlink\" title=\"2. JS中的对象\"></a>2. JS中的对象</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【Array】</span><br><span class=\"line\">\t属性</span><br><span class=\"line\">\t\t获取数组长度：length</span><br><span class=\"line\">\t方法</span><br><span class=\"line\">\t\t遍历数组：forEach()</span><br><span class=\"line\">\t\t添加元素到末尾：push()</span><br><span class=\"line\">\t\t删除元素：splice()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【String】</span><br><span class=\"line\">\t属性</span><br><span class=\"line\">\t\t获取字符串长度：length</span><br><span class=\"line\">\t方法</span><br><span class=\"line\">\t\t获取指定角标的字符：charAt()</span><br><span class=\"line\">\t\t获取指定字符串的索引：indexOf()</span><br><span class=\"line\">\t\t去除字符串两端的空格：trim()</span><br><span class=\"line\">\t\t字符串截取：subString()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【JSON】</span><br><span class=\"line\">\t定义json：</span><br><span class=\"line\">\t\t1. 键值对类型</span><br><span class=\"line\">\t\t2. 所有键都要用&quot;&quot;括起来</span><br><span class=\"line\">\t\t3. 值：</span><br><span class=\"line\">\t\t\tString：用&quot;&quot;括起来</span><br><span class=\"line\">\t\t\t数字：直接写</span><br><span class=\"line\">\t\t\tboolean：直接写true、false</span><br><span class=\"line\">\t\t\t数组：[]</span><br><span class=\"line\">\t\t\t对象：&#123;&#125;</span><br><span class=\"line\">\tjson字符串 转json对象：JSON.parse</span><br><span class=\"line\">\tjs对象 转 json串：JSON.Stringify()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【BOM】浏览器对象模型</span><br><span class=\"line\">\twindow对象的方法</span><br><span class=\"line\">\t\t弹出警告框：alert()</span><br><span class=\"line\">\t\t弹出对话框：confirm()</span><br><span class=\"line\">\t\t周期执行的定时器：setInterval()</span><br><span class=\"line\">\t\t一次性执行的定时器：setTimeout()</span><br><span class=\"line\">\tlocation对象：</span><br><span class=\"line\">\t\t设置或者获取url的属性：href</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【DOM】文档对象模型</span><br><span class=\"line\">\t使用document对象获取Element元素对象</span><br><span class=\"line\">\t\t根据id获取元素：getElementById()</span><br><span class=\"line\">\t\t根据标签获取元素：getElementsByTagName()</span><br><span class=\"line\">\t\t根据名称获取元素：getElementsByName()</span><br><span class=\"line\">\t\t根据类名获取元素：getElementsByClassName()</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-事件监听\"><a href=\"#3-事件监听\" class=\"headerlink\" title=\"3. 事件监听\"></a>3. 事件监听</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何为元素绑定事件？</span><br><span class=\"line\">1.在html标签中 使用 事件属性 进行绑定</span><br><span class=\"line\">&lt;input type=&quot;button&quot; id=&quot;btn1&quot; value=&quot;事件绑定1&quot; onclick=&quot;on()&quot;&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function on()&#123;</span><br><span class=\"line\">        alert(&quot;按钮1被点击了...&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">2.使用DOM中的Element元素的事件属性进行绑定</span><br><span class=\"line\">&lt;input type=&quot;button&quot; id=&quot;btn2&quot; value=&quot;事件绑定2&quot;&gt;</span><br><span class=\"line\">document.getElementById(&#x27;btn2&#x27;).onclick = function()&#123;</span><br><span class=\"line\">    alert(&quot;按钮2被点击了...&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常见的事件？</span><br><span class=\"line\">\t鼠标单击：onclick</span><br><span class=\"line\">\t元素失去焦点：onblur</span><br><span class=\"line\">\t元素获取焦点：onfocus</span><br><span class=\"line\">\t页面加载完成：onload</span><br><span class=\"line\">\t表单提交：onsubmit</span><br><span class=\"line\">\t键盘的按键被按下：onkeydown</span><br><span class=\"line\">\t鼠标移到元素上：onmouseover</span><br><span class=\"line\">\t鼠标从元素上移开：onmouseout</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-Vue\"><a href=\"#4-Vue\" class=\"headerlink\" title=\"4. Vue\"></a>4. Vue</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue常见指令的作用：</span><br><span class=\"line\">\tv-bind：给html标签中的属性绑定数据模型</span><br><span class=\"line\">\tv-model：双向绑定，数据模型和view</span><br><span class=\"line\">\tv-if：条件控制，条件成立则渲染元素，条件不成立则不渲染</span><br><span class=\"line\">\tv-show：条件控制，不管条件是否成立都会渲染元素，通过display属性控制元素是否要展示</span><br><span class=\"line\">\tv-for：遍历</span><br><span class=\"line\">\tv-on：绑定事件</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue的生命周期方法：Vue挂载完成会调用哪个方法？</span><br><span class=\"line\">mounted() vue挂载完成/页面加载完成 后会自动调用该方法</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day03-Vue-amp-Element\"><a href=\"#Day03-Vue-amp-Element\" class=\"headerlink\" title=\"Day03 - Vue&amp;Element\"></a>Day03 - Vue&amp;Element</h1><h2 id=\"1-Ajax\"><a href=\"#1-Ajax\" class=\"headerlink\" title=\"1. Ajax\"></a>1. Ajax</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过Axios请求发送ajax请求 的两种方式</span><br><span class=\"line\">axios.get(&quot;url&quot;).then(result =&gt; &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">axios.post(&quot;url&quot;，&quot;id=1&quot;).then(result =&gt; &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-前后端分离开发\"><a href=\"#2-前后端分离开发\" class=\"headerlink\" title=\"2. 前后端分离开发\"></a>2. 前后端分离开发</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">好处：</span><br><span class=\"line\">\t便于开发、便于维护</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前后端分离的开发模式是什么样的？</span><br><span class=\"line\">\t前端开发前端代码，后端开发后端代码，后端定义接口文档（请求方式、请求路径、前后端、出参），前后端都按照接口文档进行开发即可</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-前端工程化开发\"><a href=\"#3-前端工程化开发\" class=\"headerlink\" title=\"3. 前端工程化开发\"></a>3. 前端工程化开发</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前端工程化开发的步骤：</span><br><span class=\"line\">\t1. 安装NodeJs</span><br><span class=\"line\">\t2. 安装Vue-cli</span><br><span class=\"line\">\t------上述为一次性操作------</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t3. 使用Vue-cli生成vue工程</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-ElementUI\"><a href=\"#4-ElementUI\" class=\"headerlink\" title=\"4. ElementUI\"></a>4. ElementUI</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ElementUI的作用：组件库</span><br><span class=\"line\">\t让我们可以开发美观的前端页面</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何进行ElementUI开发</span><br><span class=\"line\">\t1.安装ElementUI</span><br><span class=\"line\">\t2.在main.js文件中引入了ElementUI</span><br><span class=\"line\">\t------上述为一次性操作------</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t3.开发vue代码 到ElementUI官网复制粘贴</span><br><span class=\"line\">\t\t（1）Html：template （2）js：script （3）css：style</span><br><span class=\"line\">\t4.在App.vue中引入.vue文件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Vue路由\"><a href=\"#5-Vue路由\" class=\"headerlink\" title=\"5. Vue路由\"></a>5. Vue路由</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue路由的作用是什么？</span><br><span class=\"line\">\tvue路由 是一个路径管理器，它的作用是 当我们点击页面上一个按钮 后url发生变化，在页面中展示对应的视图</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-前端工程打包部署\"><a href=\"#6-前端工程打包部署\" class=\"headerlink\" title=\"6. 前端工程打包部署\"></a>6. 前端工程打包部署</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在Nigix服务器上部署前端代码？</span><br><span class=\"line\">\t1. 打包前端代码，把dist里的代码复制粘贴到 nigix的html目录下</span><br><span class=\"line\">\t2. 双击nigix.exe启动服务</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day04-Maven-amp-SpringBootWeb入门\"><a href=\"#Day04-Maven-amp-SpringBootWeb入门\" class=\"headerlink\" title=\"Day04 - Maven&amp;SpringBootWeb入门\"></a>Day04 - Maven&amp;SpringBootWeb入门</h1><h2 id=\"1-Maven\"><a href=\"#1-Maven\" class=\"headerlink\" title=\"1. Maven\"></a>1. Maven</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven的作用是什么？</span><br><span class=\"line\">\t项目管理和构建工具</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven的安装与配置</span><br><span class=\"line\">\t按照文档安装配置即可。如果clean都报错，必定maven配置有问题</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven的仓库有哪几类？</span><br><span class=\"line\">\t本地仓库</span><br><span class=\"line\">\t私服</span><br><span class=\"line\">\t中央仓库</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何使用Maven配置依赖？如何排除依赖？</span><br><span class=\"line\">\t&lt;dependencies&gt; </span><br><span class=\"line\">\t&lt;exclusions&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">依赖传递性</span><br><span class=\"line\">\t如果A依赖B，B依赖C，则A依赖C</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">依赖的范围有哪些？</span><br><span class=\"line\">\tcompile（默认）</span><br><span class=\"line\">\ttest</span><br><span class=\"line\">\tprovided</span><br><span class=\"line\">\truntime</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven常见的生命周期</span><br><span class=\"line\">\tclean、compile、test、package、install</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-SpringBoot入门程序\"><a href=\"#2-SpringBoot入门程序\" class=\"headerlink\" title=\"2.SpringBoot入门程序\"></a>2.SpringBoot入门程序</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（1）创建SpringBoot</span><br><span class=\"line\">（2）编写请求处理器类 HelloController</span><br><span class=\"line\">\t@RestController 代表此类是请求处理器类</span><br><span class=\"line\">\t@RequestMapping 映射请求路径和后端方法</span><br><span class=\"line\">（3）启动服务</span><br><span class=\"line\">\t运行SpringBoot主启动类</span><br><span class=\"line\">\t@SpringBootApplication 标识此类是SpringBoot的主启动类</span><br><span class=\"line\"></span><br><span class=\"line\">扩展：pom.xml文件</span><br><span class=\"line\">\t&lt;parent&gt; 为当前pom制定了父pom，父pom中锁定了依赖的版本号，好处是减少依赖冲突</span><br><span class=\"line\">\tstarter 起步依赖：帮我们引入了许多依赖，简化了依赖配置</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-HTTP协议\"><a href=\"#3-HTTP协议\" class=\"headerlink\" title=\"3. HTTP协议\"></a>3. HTTP协议</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是HTTP协议？</span><br><span class=\"line\">\t超文本传输协议，规定了浏览器和服务器之间数据传输的规则</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP请求信息都有哪些部分？</span><br><span class=\"line\">\t请求行、请求头、请求体</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP响应信息都有哪些部分？</span><br><span class=\"line\">\t响应行、响应头、响应体</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP状态码分别代表什么含义？</span><br><span class=\"line\">1 开头：处理中，临时状态</span><br><span class=\"line\">2 开头：成功</span><br><span class=\"line\">3 开头：重定向</span><br><span class=\"line\">4 开头：浏览器错误</span><br><span class=\"line\">5 开头：服务器错误</span><br><span class=\"line\"></span><br><span class=\"line\">常见的状态：200/404/500</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-Tomcat服务器\"><a href=\"#4-Tomcat服务器\" class=\"headerlink\" title=\"4. Tomcat服务器\"></a>4. Tomcat服务器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：解压</span><br><span class=\"line\">启动：/bin/startup.bat</span><br><span class=\"line\">部署项目：把项目代码复制到tomcat安装目录下的webapp目录中</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day05-SpringBootWeb请求响应\"><a href=\"#Day05-SpringBootWeb请求响应\" class=\"headerlink\" title=\"Day05 - SpringBootWeb请求响应\"></a>Day05 - SpringBootWeb请求响应</h1><h2 id=\"1-PostMan\"><a href=\"#1-PostMan\" class=\"headerlink\" title=\"1. PostMan\"></a>1. PostMan</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">postman的作用？</span><br><span class=\"line\">\t做接口测试</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-不同-请求类型-发送请求\"><a href=\"#1-1-不同-请求类型-发送请求\" class=\"headerlink\" title=\"1.1 不同 请求类型 发送请求\"></a>1.1 不同 请求类型 发送请求</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET：参数放在请求行的url后，使用postman放在param中</span><br><span class=\"line\">POST:参数放在请求体中，使用postman放在body</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-不同-参数类型-发送与接收请求\"><a href=\"#1-2-不同-参数类型-发送与接收请求\" class=\"headerlink\" title=\"1.2 不同 参数类型 发送与接收请求\"></a>1.2 不同 参数类型 发送与接收请求</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">简单类型/实体类：</span><br><span class=\"line\">\t前端：前端请求参数 和 后端形参保持一致即可</span><br><span class=\"line\">\t后端：后端用简单类型或实体类接收，如果参数名不一致，要加 @RequestParam(name=&quot;前端参数名&quot;)绑定参数</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组/集合：</span><br><span class=\"line\">\t前端：前端请求参数 和 后端形参保持一致；参数写多个</span><br><span class=\"line\">\t后端：使用数组或集合接收，如果用集合接收，形参前要加一个@RequestParam绑定参数</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">日期：</span><br><span class=\"line\">\t前端：按照后端指定的日期格式进行传参</span><br><span class=\"line\">\t后端：使用@DateTimeFormat(pattern=&quot;&quot;)指定日期格式</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json格式：</span><br><span class=\"line\">\t前端：要使用post方式，选择body-》row-》json进行传参</span><br><span class=\"line\">\t后端：使用实体类接收，实体类前添加@RequestBody注解</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">路径格式：</span><br><span class=\"line\">\t前端：/path/1</span><br><span class=\"line\">\t后端：在路径中使用&#123;id&#125;作为占位符；形参和路径中的参数变量保持一致；形参前要添加@PathVariable</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【总结】</span><br><span class=\"line\">\t前端：</span><br><span class=\"line\">\t\t前端请求参数 和 后端形参保持一致</span><br><span class=\"line\">\t\tjson传参：body -》 row -》json</span><br><span class=\"line\">\t后端：</span><br><span class=\"line\">\t\t如果请求参数名和形参不一致 或 使用List接收数据 形参前要添加@RequestParam</span><br><span class=\"line\">\t\t如果是日期传参，要添加 @DateTimeFormat(pattern=&quot;&quot;)</span><br><span class=\"line\">\t\t如果是json传参，要添加 @RequestBody</span><br><span class=\"line\">\t\t如果是路径变量传参：路径要加&#123;&#125;占位符，形参前要添加@PathVariable</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-返回响应\"><a href=\"#1-3-返回响应\" class=\"headerlink\" title=\"1.3 返回响应\"></a>1.3 返回响应</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回响应需要用到哪个注解？</span><br><span class=\"line\">\t@ResponseBody把当前方法返回值放在响应体中，如果返回值是实体类或集合，会默认转换成json格式，并放到响应体中</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-分层架构\"><a href=\"#2-分层架构\" class=\"headerlink\" title=\"2.分层架构\"></a>2.分层架构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">三层架构中每一层的职责：</span><br><span class=\"line\">\tcontroller：控制层 用于接收请求和返回响应</span><br><span class=\"line\">\tservice：业务逻辑处理层</span><br><span class=\"line\">\tdao：数据操作层（持久层）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分层后各层之间的解耦思路</span><br><span class=\"line\">\t高内聚低耦合</span><br><span class=\"line\">\t内聚：单个模块内部功能联系程度，越高越好 UserController内部只处理用户相关功能，不处理其他功能</span><br><span class=\"line\">\t耦合：各个模块之间功能联系程度，越低越好 UserController和OrderController之间依赖影响越低越好</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t实现思路：使用Spring容器中的IOC和DI</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Spring容器的作用是什么？</span><br><span class=\"line\">\t背景：Springboot基于Spring的框架，Spring容器是Spring的组件</span><br><span class=\"line\">\t作用：创建并管理对象</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-IOC和DI\"><a href=\"#3-IOC和DI\" class=\"headerlink\" title=\"3. IOC和DI\"></a>3. IOC和DI</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是IOC？（Inverse Of Controller）</span><br><span class=\"line\">\t控制反转，反转的是对象的创建权，从程序员new对象 反转为 Spring容器 new对象</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是DI？</span><br><span class=\"line\">\t依赖注入，给容器中bean的属性赋值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">声明bean的注解？（即把对象放入容器中的注解）</span><br><span class=\"line\">@Component</span><br><span class=\"line\">\t@Controller</span><br><span class=\"line\">\t@Service</span><br><span class=\"line\">\t@Repository</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">依赖注入的注解?</span><br><span class=\"line\">\t@Autowired：按照类型注入</span><br><span class=\"line\">\t@Qualifier：按照名称注入 要和@Autowired搭配使用</span><br><span class=\"line\">\t@Resource：按照名称注入 = @Autowired + @Qualifier</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day06-MySQL\"><a href=\"#Day06-MySQL\" class=\"headerlink\" title=\"Day06 - MySQL\"></a>Day06 - MySQL</h1><h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mysql数据库的作用</span><br><span class=\"line\">\t存储和管理数据的仓库</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mysql数据库的使用</span><br><span class=\"line\">安装 ：解压</span><br><span class=\"line\">启动 ：net start mysql</span><br><span class=\"line\">连接 ：mysql -uroot -proot</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常见Sql语句的分类</span><br><span class=\"line\">\tDDL：数据库定义语言，对库和表进行增删改查</span><br><span class=\"line\">\tDML: 数据库操作语言，对表中的数据进行增删改</span><br><span class=\"line\">\tDQL: 数据库查询语言，对表中数据进行查询</span><br><span class=\"line\">\tDCL: 数据库控制语言，用于控制权限</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-DDL\"><a href=\"#2-DDL\" class=\"headerlink\" title=\"2.DDL\"></a>2.DDL</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常见DDL语句</span><br><span class=\"line\">【数据库】</span><br><span class=\"line\">\t创建：create database db01;</span><br><span class=\"line\">\t查询：show databases;</span><br><span class=\"line\">\t使用：use db01;</span><br><span class=\"line\">\t删除：drop database db01;</span><br><span class=\"line\">\t创建：</span><br><span class=\"line\">\t\tcreate table user(</span><br><span class=\"line\">\t\t\t字段名 字段类型 [约束]  [comment &#x27;字段说明&#x27;],</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t字段名 字段类型 [约束]  [comment &#x27;字段说明&#x27;]</span><br><span class=\"line\">\t\t)comment &#x27;用户表&#x27;;</span><br><span class=\"line\">\t查询 掌握图形化界面使用</span><br><span class=\"line\">\t修改</span><br><span class=\"line\">\t删除</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">约束</span><br><span class=\"line\">\t非空约束 not null</span><br><span class=\"line\">\t唯一约束 unique</span><br><span class=\"line\">\t主键约束 primary key</span><br><span class=\"line\">\t默认约束 default</span><br><span class=\"line\">\t外键约束 foreign key</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何根据产品原型和需求设计数据库和表结构？</span><br><span class=\"line\">\t表结构设计：</span><br><span class=\"line\">\t\t原型字段：需要哪些字段、字段类型、约束</span><br><span class=\"line\">\t\t基础字段：id、create_time、update_time</span><br><span class=\"line\">\t\t表结构：原型字段 + 基础字段</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-DML\"><a href=\"#3-DML\" class=\"headerlink\" title=\"3. DML\"></a>3. DML</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新增数据：</span><br><span class=\"line\">\tinsert into 表名(字段列表) values(字段值列表)，(字段值列表)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改数据：</span><br><span class=\"line\">\tupdate 表名 set 字段名1=字段值1，字段名2=字段值2 where 条件</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">删除数据：</span><br><span class=\"line\">\tdelete from 表名 where 条件</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day07-MySQL多表\"><a href=\"#Day07-MySQL多表\" class=\"headerlink\" title=\"Day07 - MySQL多表\"></a>Day07 - MySQL多表</h1><h2 id=\"1-DQL\"><a href=\"#1-DQL\" class=\"headerlink\" title=\"1. DQL\"></a>1. DQL</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DQL语法：</span><br><span class=\"line\">\tselect</span><br><span class=\"line\">\t\t字段列表</span><br><span class=\"line\">\tfrom</span><br><span class=\"line\">\t\t表名列表</span><br><span class=\"line\">\twhere</span><br><span class=\"line\">\t\t条件列表</span><br><span class=\"line\">\tgroup by </span><br><span class=\"line\">\t\t分组列表</span><br><span class=\"line\">\thaving</span><br><span class=\"line\">\t\t分组过滤条件列表</span><br><span class=\"line\">\torder by</span><br><span class=\"line\">\t\t排序字段列表</span><br><span class=\"line\">\tlimit</span><br><span class=\"line\">\t\t分页参数</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【基础查询】</span><br><span class=\"line\">\tselect 字段列表 from 表名</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tselect * from 表名</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【条件查询】</span><br><span class=\"line\">比较运算符：</span><br><span class=\"line\">\t数学运算符：&gt; &gt;= &lt; &lt;= =</span><br><span class=\"line\">\t不等于：!=  &lt;&gt;</span><br><span class=\"line\">\t范围：between and （包含最大值和最小值）</span><br><span class=\"line\">\t列表中多选一：in()</span><br><span class=\"line\">\t模糊查询：like</span><br><span class=\"line\">\t\t占位符：</span><br><span class=\"line\">\t\t\t_:一个任意字符</span><br><span class=\"line\">\t\t\t%:0个或多个任意字符</span><br><span class=\"line\">\t是null：is null</span><br><span class=\"line\">逻辑运算符：\t</span><br><span class=\"line\">\t并且：and</span><br><span class=\"line\">\t或：or</span><br><span class=\"line\">\t不是：not !</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【聚合】</span><br><span class=\"line\">\t查询数量：count(*)</span><br><span class=\"line\">\t最大值：max()</span><br><span class=\"line\">\t最小值：min()</span><br><span class=\"line\">\t平均值：avg()</span><br><span class=\"line\">\t求和：sum()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【分组】</span><br><span class=\"line\">\tgroup by ... having</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【排序】</span><br><span class=\"line\">\torder by</span><br><span class=\"line\">\t排序方式：</span><br><span class=\"line\">\t\tasc:升序 （默认）</span><br><span class=\"line\">\t\tdesc：降序</span><br><span class=\"line\">\t如果排序字段有多个，那么先按照第一个字段排序，如果第一个字段相等，再按照第二个字段进行排序</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【分页查询】</span><br><span class=\"line\">\tlimit 起始索引, 每页查询数量</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t起始索引 从0开始</span><br><span class=\"line\">\t起始索引 = （查询页数 - 1） * 每页查询数量</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-多表\"><a href=\"#2-多表\" class=\"headerlink\" title=\"2. 多表\"></a>2. 多表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表之间的关系有哪三种，分别怎么维护？</span><br><span class=\"line\">\t一对一：任意在一个表中建立另一个表的外键</span><br><span class=\"line\">\t一对多：在多对应的表中 建立 一对应的表的外键</span><br><span class=\"line\">\t多对多：建立中间表，中间表中分别建立另两张表的外键</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">外键的作用</span><br><span class=\"line\">\t可以通过外键关联到另外一张表的数据</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">多表设计的思路和流程</span><br><span class=\"line\">\t1.根据需求文档和页面原型 分析 表关系</span><br><span class=\"line\">\t2.根据需求文档和页面原型 分析 表结构</span><br><span class=\"line\">\t\t字段、字段类型、约束</span><br><span class=\"line\">\t3.创建表</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day08-MySQL-amp-MyBatis入门\"><a href=\"#Day08-MySQL-amp-MyBatis入门\" class=\"headerlink\" title=\"Day08 - MySQL&amp;MyBatis入门\"></a>Day08 - MySQL&amp;MyBatis入门</h1><h2 id=\"1-多表查询\"><a href=\"#1-多表查询\" class=\"headerlink\" title=\"1. 多表查询\"></a>1. 多表查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接查询的基础语法</span><br><span class=\"line\">\t内连接：</span><br><span class=\"line\">\t\t隐式内连接：</span><br><span class=\"line\">\t\t\tselect * from 表A, 表B where 关联条件</span><br><span class=\"line\">\t\t显式内连接：</span><br><span class=\"line\">\t\t\tselect * from 表A</span><br><span class=\"line\">\t\t\tjoin 表B on 关联条件</span><br><span class=\"line\">\t外连接：</span><br><span class=\"line\">\t\t左连接：</span><br><span class=\"line\">\t\t\tselect * from 表A</span><br><span class=\"line\">\t\t\tleft join 表B on 关联条件</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内连接和外连接的区别？</span><br><span class=\"line\">\t内连接：取两张表的交集</span><br><span class=\"line\">\t外连接：取左表的全部数据 和 右表能关联上的数据</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">子查询</span><br><span class=\"line\">\t标量子查询：常量 = &lt; &lt;= &gt; &gt;=</span><br><span class=\"line\">\t列子查询：子查询结果只有一列，可以认为是一个列表   in</span><br><span class=\"line\">\t行子查询：子查询结果只有一行 </span><br><span class=\"line\">\t表子查询：子查询结果是一张临时表，可以把子查询结果当做一张临时表使用</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何完成多表查询操作？</span><br><span class=\"line\">\t1. 分析要查询哪些字段</span><br><span class=\"line\">\t2. 看这些字段在哪些表中</span><br><span class=\"line\">\t3. 分析表之间的关联条件</span><br><span class=\"line\">\t4. 查看是否有其他条件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-事务\"><a href=\"#2-事务\" class=\"headerlink\" title=\"2. 事务\"></a>2. 事务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是事务？</span><br><span class=\"line\">\t事务是多个操作的集合，这些操作要么同时成功，要么同时失败</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何开启事务、提交事务、回滚事务？</span><br><span class=\"line\">\t开启事务：start transation; / begin;</span><br><span class=\"line\">\t提交事务：commit;</span><br><span class=\"line\">\t回滚事务：rollback;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事务的四大特性是什么？</span><br><span class=\"line\">\t原子性、一致性、隔离性、持久性</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-索引\"><a href=\"#3-索引\" class=\"headerlink\" title=\"3. 索引\"></a>3. 索引</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是索引？</span><br><span class=\"line\">\t是一种提高查询效率的数据结构，B+Tree(多路平衡搜索树)</span><br><span class=\"line\">\t优点：提高查询效率和排序效率</span><br><span class=\"line\">\t缺点：占用空间，数据增删改的时候维护索引需要性能开销</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引的操作</span><br><span class=\"line\">\t创建：create index 索引名 on 表名(字段名)</span><br><span class=\"line\">\t删除：drop index 索引名 on 表名</span><br><span class=\"line\">\t查询：show index from 表名</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL数据库索引的数据结构</span><br><span class=\"line\">\tB+Tree(多路平衡搜索树)</span><br><span class=\"line\">\t\t（1）每个节点上有多个key，也就有多路分支</span><br><span class=\"line\">\t\t（2）所有数据都存储在叶子节点，非叶子节点只存储索引</span><br><span class=\"line\">\t\t（3）叶子节点是天然有序的双向链表，便于数据的排序和范围查询</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-Mybatis入门\"><a href=\"#4-Mybatis入门\" class=\"headerlink\" title=\"4. Mybatis入门\"></a>4. Mybatis入门</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpringBoot-Mybatis入门程序</span><br><span class=\"line\">\t1. 准备工作：创建数据库和表，创建了工程，user实体类</span><br><span class=\"line\">\t2. 在application.properties中 配置数据库连接：驱动、url、username、password</span><br><span class=\"line\">\t3. 编写Mapper接口，@Mapper @Select(&quot;select * from user&quot;)</span><br><span class=\"line\">\t4. 测试</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是数据库驱动？</span><br><span class=\"line\">\tjava程序连接数据库的工具</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是JDBC ？</span><br><span class=\"line\">\tJDBC是用于操作 数据库驱动这个工具 的API接口</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据库连接池的作用？</span><br><span class=\"line\">\t数据库连接池 是一个容器，用于创建、管理数据库连接</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day09-Mybatis\"><a href=\"#Day09-Mybatis\" class=\"headerlink\" title=\"Day09 - Mybatis\"></a>Day09 - Mybatis</h1><h2 id=\"1-Mybatis基础操作\"><a href=\"#1-Mybatis基础操作\" class=\"headerlink\" title=\"1. Mybatis基础操作\"></a>1. Mybatis基础操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">预编译SQL的优势是什么？</span><br><span class=\"line\">\t更高效：把预编译的sql缓存了起来</span><br><span class=\"line\">\t更安全：防止sql注入，把密码当做一整个字符串传入sql语句，如果密码中有引号，会进行转义</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数占位符$&#123;&#125; 与 #&#123;&#125;的区别</span><br><span class=\"line\">\t$&#123;&#125;：直接把参数拼装到sql中，不能防止sql注入</span><br><span class=\"line\">\t#&#123;&#125;：使用预编译的方式 把参数做为一个整体 替换 ?, 可以防止sql注入</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mybatis开发增删改查接口分别使用哪个注解？</span><br><span class=\"line\">\t增：@Insert</span><br><span class=\"line\">\t删：@Delete</span><br><span class=\"line\">\t改：@Update</span><br><span class=\"line\">\t查：@Select</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新增数据如何获取到主键?</span><br><span class=\"line\">\t@Options(useGeneratedKeys = true, keyProperty = &quot;id&quot;)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"2-基于XML开发Mybatis\"><a href=\"#2-基于XML开发Mybatis\" class=\"headerlink\" title=\"2. 基于XML开发Mybatis\"></a>2. 基于XML开发Mybatis</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mybatis中XML映射文件的开发规范</span><br><span class=\"line\">\t1.同包同名: xml文件和mapper文件的包名、文件名保持一致</span><br><span class=\"line\">\t2.xml的namespace 和 mapper的全限定类名保持一致</span><br><span class=\"line\">\t3.xml中的id 和 mapper的方法名保持一致</span><br><span class=\"line\">只有按照这个格式开发，将来调用到mapper中的方法，才能找到xml文件中对应的sql语句</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;if&gt;标签的作用和用法</span><br><span class=\"line\">\t作用：如果if标签中条件成立，则拼接sql，否则不拼接</span><br><span class=\"line\">\t用法：&lt;if test=&quot;name != null&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;where&gt;和&lt;set&gt;标签的应用场景和作用</span><br><span class=\"line\">\t应用场景：</span><br><span class=\"line\">\t\t&lt;where&gt;条件查询 &lt;set&gt;update更新的时候使用</span><br><span class=\"line\">\t作用：</span><br><span class=\"line\">\t\t&lt;where&gt;：动态拼接 where，去除多余的AND/OR</span><br><span class=\"line\">\t\t&lt;set&gt;: 动态拼接set，去除多余的逗号</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;foreach&gt;标签的用法</span><br><span class=\"line\">\t&lt;foreach colletion=&quot;ids&quot; item=&quot;id&quot; separator=&quot;,&quot; open=&quot;(&quot; close=&quot;)&quot;&gt;</span><br><span class=\"line\">\t\t#&#123;id&#125;</span><br><span class=\"line\">\t&lt;/foreach&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;sql&gt;和&lt;include&gt;的作用</span><br><span class=\"line\">\t&lt;sql id=&quot;aaa&quot;&gt;：抽取公共的sql片段</span><br><span class=\"line\">\t&lt;include refid=&quot;aaa&quot;&gt;：使用sql片段</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day10-SpringBootWeb\"><a href=\"#Day10-SpringBootWeb\" class=\"headerlink\" title=\"Day10 - SpringBootWeb\"></a>Day10 - SpringBootWeb</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REST风格</span><br><span class=\"line\">\t请求路径 + 请求方式 唯一确定一个后端方法</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t增：POST     /users</span><br><span class=\"line\">\t删：DELETE   /users/1   </span><br><span class=\"line\">\t改：PUT      /users</span><br><span class=\"line\">\t查：GET      /users/1</span><br><span class=\"line\">\t查全部：GET   /users</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day11-SpringBootWeb-案例2\"><a href=\"#Day11-SpringBootWeb-案例2\" class=\"headerlink\" title=\"Day11 - SpringBootWeb - 案例2\"></a>Day11 - SpringBootWeb - 案例2</h1><h2 id=\"1-文件上传\"><a href=\"#1-文件上传\" class=\"headerlink\" title=\"1. 文件上传\"></a>1. 文件上传</h2><h3 id=\"1-1-本地文件上传\"><a href=\"#1-1-本地文件上传\" class=\"headerlink\" title=\"1.1 本地文件上传\"></a>1.1 本地文件上传</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件上传 前端页面三要素</span><br><span class=\"line\">(1) 表单提交方式 必须是 POST</span><br><span class=\"line\">(2) 表单的encType属性值 必须是 mutipart/form-data</span><br><span class=\"line\">(3) 表单项的type属性值 必须是 file</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件上传 后端接收文件二要素</span><br><span class=\"line\">（1）形参类型必须是 MutipartFile</span><br><span class=\"line\">（2）形参名必须和表单项名称保持一致</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-阿里云OSS文件上传\"><a href=\"#1-2-阿里云OSS文件上传\" class=\"headerlink\" title=\"1.2 阿里云OSS文件上传\"></a>1.2 阿里云OSS文件上传</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件上传：</span><br><span class=\"line\">\t1. 注册账号，创建Bucket、AKSK</span><br><span class=\"line\">\t2. 导入依赖，导入阿里云文件上传工具类 </span><br><span class=\"line\">\t3. 编写文件上传代码 形参类型为MutipartFile，形参名是image 和前端请求参数保持一致，再调用文件上传工具类即可</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-YML\"><a href=\"#2-YML\" class=\"headerlink\" title=\"2. YML\"></a>2. YML</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YML文件的语法格式</span><br><span class=\"line\">\t（1）以冒号结尾</span><br><span class=\"line\">\t（2）属性值 和 属性名之间用冒号连接，冒号和属性值之间一定要加一个空格</span><br><span class=\"line\">\t（3）用空格缩进表示层级关系</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">读取YML文件的配置信息</span><br><span class=\"line\">\t@Value：读取配置文件中的值，读取单个属性</span><br><span class=\"line\">\t@ConfigurationProperties(prefix=&quot;aliyun.oss&quot;)：读取配置文件中的值到实体类中 批量读取属性</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day12-Web登录认证\"><a href=\"#Day12-Web登录认证\" class=\"headerlink\" title=\"Day12 - Web登录认证\"></a>Day12 - Web登录认证</h1><h2 id=\"1-会话技术\"><a href=\"#1-会话技术\" class=\"headerlink\" title=\"1.会话技术\"></a>1.会话技术</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是会话？</span><br><span class=\"line\">\t一个浏览器和一个服务器建立一次连接的过程就是一次会话，浏览器或服务器断开连接则会话结束。一次会话中可以有多次请求</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">会话跟踪技术的作用？</span><br><span class=\"line\">\t在一次会话的多次请求间共享数据</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">会话跟踪技术有哪些？</span><br><span class=\"line\">\tcookie：客户端会话跟踪技术</span><br><span class=\"line\">\tsession：服务端会话跟踪技术</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cookie的原理</span><br><span class=\"line\">\t多次请求 携带的是同一个 cookie，就在客户端实现了数据共享</span><br><span class=\"line\"></span><br><span class=\"line\">缺点：</span><br><span class=\"line\">\t不能在移动端使用</span><br><span class=\"line\">\t不安全，因为用户可以禁用cookie</span><br><span class=\"line\">\t不能跨域</span><br><span class=\"line\">\t</span><br><span class=\"line\">【跨域】：</span><br><span class=\"line\">\t判断两次请求中 协议、ip/域名、端口号 是否不一致，如果不一致则跨域了</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session的原理</span><br><span class=\"line\">  多次请求在cookie中携带的是同一个sessionId，就能在服务器中找到同一个session，就实现了服务端的数据共享</span><br><span class=\"line\"></span><br><span class=\"line\">缺点：</span><br><span class=\"line\">\t集群中不能使用session共享数据</span><br><span class=\"line\">\tcookie的所有缺点（因为session是基于cookie实现的）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JWT令牌的三个组成部分</span><br><span class=\"line\">\theader：令牌类型 和 签名算法</span><br><span class=\"line\">\tpayload：自定义数据</span><br><span class=\"line\">\tsignature：签名</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JWT令牌的生成和校验</span><br><span class=\"line\">\t使用Jwts工具类 生成令牌和校验令牌</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">登录校验中使用令牌</span><br><span class=\"line\">\t令牌生成：登录成功后 生成令牌 并返回给前端</span><br><span class=\"line\">\t令牌校验：（除了登录之外的）每次请求都需要校验令牌，统一拦截校验</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-Filter-过滤器\"><a href=\"#2-Filter-过滤器\" class=\"headerlink\" title=\"2. Filter 过滤器\"></a>2. Filter 过滤器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器的作用：</span><br><span class=\"line\">\t拦截请求 并在放行前后 做一些逻辑处理</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器入门程序</span><br><span class=\"line\">\t1.定义 实现 Filter接口</span><br><span class=\"line\">\t2.添加注解</span><br><span class=\"line\">\t\t@WebFilter(urlPatterns=&quot;/*&quot;)</span><br><span class=\"line\">\t\t@ServletComponentScan //开启Servlet组件扫描，只有开启了才能扫描到@WebFilter</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器的执行流程</span><br><span class=\"line\">\t1. 放行前逻辑</span><br><span class=\"line\">\t2. 放行</span><br><span class=\"line\">\t3. 执行目标方法</span><br><span class=\"line\">\t4. 放行后逻辑</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">登录校验过滤器的作用</span><br><span class=\"line\">\t统一拦截所有请求，并判断令牌的合法性，如果合法则放行，如果并不合法，则返回NOT_LOGIN</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-Interceptor-拦截器\"><a href=\"#3-Interceptor-拦截器\" class=\"headerlink\" title=\"3. Interceptor 拦截器\"></a>3. Interceptor 拦截器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">拦截器的入门程序</span><br><span class=\"line\"> \t1.定义拦截器 实现HandlerInterceptor，并重写preHandler、postHander、AfterComplection</span><br><span class=\"line\"> \t2.注册拦截器 定义配置类，并实现WebMvcConfiguer，并添加 @Configuration</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">拦截器的执行顺序</span><br><span class=\"line\">\tpreHandler</span><br><span class=\"line\">\t\treturn true </span><br><span class=\"line\">\t\t\t执行目标方法</span><br><span class=\"line\">\t\t\tpostHander</span><br><span class=\"line\">\t\t\tAfterComplection</span><br><span class=\"line\">\t\treturn false</span><br><span class=\"line\">\t\t\t拦截请求</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器和拦截器的区别</span><br><span class=\"line\">\t1. 如果过滤器和拦截器同时存在，那么请求先进入过滤器，过滤器放行再进入拦截器</span><br><span class=\"line\">\t2. 过滤器实现Filter接口，拦截器实现 HandlerInterceptor接口</span><br><span class=\"line\">\t3. 过滤器拦截所有请求，拦截器只拦截controller</span><br><span class=\"line\">\t4. 实现原理不同：过滤器基于回调实现，拦截器基于反射实现</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-全局异常处理器\"><a href=\"#4-全局异常处理器\" class=\"headerlink\" title=\"4. 全局异常处理器\"></a>4. 全局异常处理器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">定义全局异常处理器</span><br><span class=\"line\">\t@RestControllerAdvice：放在类上，标明此类是一个异常处理器类</span><br><span class=\"line\">\t@ExceptionHandler(Exception.class)：放在方法上，指定当前方法捕获哪一类异常</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day13-事务管理-amp-AOP\"><a href=\"#Day13-事务管理-amp-AOP\" class=\"headerlink\" title=\"Day13 - 事务管理 &amp; AOP\"></a>Day13 - 事务管理 &amp; AOP</h1><h2 id=\"1-事务\"><a href=\"#1-事务\" class=\"headerlink\" title=\"1. 事务\"></a>1. 事务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在Spring中完成事务管理</span><br><span class=\"line\">\t@Transactional</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事务属性 rollback的作用</span><br><span class=\"line\">\t指定哪些异常要回滚，一般指定所有异常都要回滚</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事务传播行为propagation的作用</span><br><span class=\"line\">\tpropagation: 控制事务传播行为，当业务层方法之间相互调用发生事务嵌套时，内层事务是否要和外层同成功同失败</span><br><span class=\"line\">\t- REQUIRED：默认内外层使用同一个事物，同成功同失败</span><br><span class=\"line\">\t- REQUIRES_NEW：内外层事务之间互不影响</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-AOP\"><a href=\"#2-AOP\" class=\"headerlink\" title=\"2. AOP\"></a>2. AOP</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是AOP？</span><br><span class=\"line\">\t面向切面编程</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AOP的作用？</span><br><span class=\"line\">\t在不改变原始代码的基础上进行功能增强</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AOP的核心概念</span><br><span class=\"line\">\t连接点：所有可以进行功能增强的方法都是连接点</span><br><span class=\"line\">\t切入点：进行了功能增强的方法就是切入点</span><br><span class=\"line\">\t通知：共性功能</span><br><span class=\"line\">\t切面：切入点 + 通知</span><br><span class=\"line\">\t目标对象：通知所应用的对象就是目标对象</span><br><span class=\"line\">\t切入点表达式：指定哪些方法是切入点</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AOP常见通知类型</span><br><span class=\"line\">\t前置通知：@Before</span><br><span class=\"line\">\t后置通知：@After</span><br><span class=\"line\">\t环绕通知：@Around</span><br><span class=\"line\">\t返回后通知：@AfterReturning</span><br><span class=\"line\">\t异常后通知：@AfterThrowing</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">切入点表达式的写法</span><br><span class=\"line\">\t写法一：@PointCut(&quot;execution(访问修饰符 返回值 包名.类名.方法名(参数))&quot;)</span><br><span class=\"line\">\t\t通配符：</span><br><span class=\"line\">\t\t\t* 单个或半个任意符号 多用于模糊匹配</span><br><span class=\"line\">\t\t\t.. 多个连续任意符号 多用于参数省略或包名省略</span><br><span class=\"line\">\t写法二：@PointCut(&quot;@annotation(注解的全路径类名)&quot;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过连接点对象获取目标方法的信息</span><br><span class=\"line\">\t获取类名：joinPoint.getTarget().getClass().getName()</span><br><span class=\"line\">\t获取方法名：joinPoint.getSignature().getName()</span><br><span class=\"line\">\t获取参数：joinPoint.getArgs()</span><br><span class=\"line\">\t执行目标方法：joinPoint.proceed()</span><br><span class=\"line\">\t获取返回值：Object result = joinPoint.proceed()</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day14-自动配置原理\"><a href=\"#Day14-自动配置原理\" class=\"headerlink\" title=\"Day14 - 自动配置原理\"></a>Day14 - 自动配置原理</h1><h2 id=\"1-配置文件\"><a href=\"#1-配置文件\" class=\"headerlink\" title=\"1. 配置文件\"></a>1. 配置文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Springboot配置文件的优先级</span><br><span class=\"line\">\tproperties、yml、yaml</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpringBoot的jar包启动</span><br><span class=\"line\">\tjava -jar xxx.jar </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-管理bean\"><a href=\"#2-管理bean\" class=\"headerlink\" title=\"2. 管理bean\"></a>2. 管理bean</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">手动从容器中获取bean</span><br><span class=\"line\">\tapplicationContext.getBean(&quot;&quot;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置bean的作用域</span><br><span class=\"line\">\t@Scope</span><br><span class=\"line\">\t\tsingleton：单例</span><br><span class=\"line\">\t\tprototype：非单例</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Bean注解的作用</span><br><span class=\"line\">\t管理第三方bean时使用，作用是：把当前方法的返回值放到Spring容器中</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-自动配置原理\"><a href=\"#3-自动配置原理\" class=\"headerlink\" title=\"3. 自动配置原理\"></a>3. 自动配置原理</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自动配置</span><br><span class=\"line\">\t在容器启动的时候，自动把一些配置类或bean放到Spring容器中，这些不需要我们手动操作，只需要拿来即用即可</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自动配置原理：</span><br><span class=\"line\">\t在主启动类的核心注解里，有一个自动配置注解@EnableAutoConfiguration，这个注解会自动扫描spring.factories和AutoConfiguration.imports这两个文件，文件内部定义了一些xxxAutoConfiguration，里边使用了@Bean注解把对象放到Spring容器中</span><br><span class=\"line\">\t</span><br><span class=\"line\">自动配置注解：@EnableAutoConfiguration</span><br><span class=\"line\">自动配置文件：spring.factories 和 AutoConfiguration.imports 文件</span><br><span class=\"line\">自动配置类：xxxAutoConfiguration（@Bean）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Import注解的作用</span><br><span class=\"line\">\t把类对应的对象导入到容器中</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Conditional注解的作用</span><br><span class=\"line\">\t满足条件的bean才会被放到Spring容器中</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Conditional衍生注解</span><br><span class=\"line\">\t@ConditionalOnClass：环境中存在该字节码对象 才会把bean放到Spring容器中</span><br><span class=\"line\">\t@ConditionalOnMissingBean：容器中不存在当前bean，才会把bean放到Spring容器中</span><br><span class=\"line\">\t@ConditionalOnProperty：配置文件中存在指定的属性名和属性值，才会把bean放到Spring容器中</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何自定义starter</span><br><span class=\"line\">\t1. 编写依赖管理模块（starter），引入依赖即可</span><br><span class=\"line\">\t2. 编写自动配置模块（autoConfiguer），在starter中引入autoConfiguer模块</span><br><span class=\"line\">\t3. 在自动配置模块中编写 </span><br><span class=\"line\">\t\t\t自动配置文件（META-INF/spring/xxxAutoConfiguration.imports）</span><br><span class=\"line\">\t\t\t自动配置类 （在xxxAutoConfiguration使用@Bean注解把类对应的对象放到Spring容器中）</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day15-MybatisPlus\"><a href=\"#Day15-MybatisPlus\" class=\"headerlink\" title=\"Day15 - MybatisPlus\"></a>Day15 - MybatisPlus</h1><h2 id=\"1-入门案例\"><a href=\"#1-入门案例\" class=\"headerlink\" title=\"1. 入门案例\"></a>1. 入门案例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">入门案例步骤</span><br><span class=\"line\">\t1. 准备工作：数据库表、创建模块（导入依赖、修改配置文件中的数据库连接信息、添加实体类）</span><br><span class=\"line\">\t2. 编写UserDao, 继承BaseMapper&lt;User&gt;, 添加@Mapper</span><br><span class=\"line\">\t3. 测试</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-标准CRUD操作\"><a href=\"#2-标准CRUD操作\" class=\"headerlink\" title=\"2. 标准CRUD操作\"></a>2. 标准CRUD操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新增：insert</span><br><span class=\"line\">根据id删除：deleteById</span><br><span class=\"line\">根据id修改：updateById</span><br><span class=\"line\">根据id查询: selectById</span><br><span class=\"line\">查列表： selectList</span><br><span class=\"line\">查分页：selectPage  添加分页拦截器</span><br><span class=\"line\"></span><br><span class=\"line\">查询投影：selectMaps</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-按条件查询\"><a href=\"#3-按条件查询\" class=\"headerlink\" title=\"3. 按条件查询\"></a>3. 按条件查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;\tgt</span><br><span class=\"line\">&gt;=\tge</span><br><span class=\"line\">&lt;\tlt</span><br><span class=\"line\">&lt;=\tle</span><br><span class=\"line\">=\teq</span><br><span class=\"line\">范围查询：between and</span><br><span class=\"line\">模糊查询：like</span><br><span class=\"line\">包含：in</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-批量操作\"><a href=\"#4-批量操作\" class=\"headerlink\" title=\"4. 批量操作\"></a>4. 批量操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">根据id批量查询：selectBatchById</span><br><span class=\"line\">根据id批量删除：deleteBatchById</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-兼容性匹配\"><a href=\"#5-兼容性匹配\" class=\"headerlink\" title=\"5. 兼容性匹配\"></a>5. 兼容性匹配</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据库表名 和 实体类名不一致：@TableName</span><br><span class=\"line\">数据库字段名 和 实体类属性名不一致：@TableField(value=&quot;&quot;)</span><br><span class=\"line\">设置不查询某字段：@TableField(select=false)</span><br><span class=\"line\">设置实体类属性名在数据库中不存在：@TableField(exist=false)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"6-id生成策略\"><a href=\"#6-id生成策略\" class=\"headerlink\" title=\"6. id生成策略\"></a>6. id生成策略</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id生成策略注解：@TableId</span><br><span class=\"line\">全局配置：id-type</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id生成策略有哪些？</span><br><span class=\"line\">\tAuto、Assign-id</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"7-逻辑删除\"><a href=\"#7-逻辑删除\" class=\"headerlink\" title=\"7. 逻辑删除\"></a>7. 逻辑删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">逻辑删除注解：</span><br><span class=\"line\">\t@TableLogic(value=&quot;0&quot;，delval=&quot;1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">步骤：</span><br><span class=\"line\">\t1.添加字段</span><br><span class=\"line\">\t2.添加注解</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"8-乐观锁\"><a href=\"#8-乐观锁\" class=\"headerlink\" title=\"8. 乐观锁\"></a>8. 乐观锁</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">步骤：</span><br><span class=\"line\">\t1.添加字段 version 和 添加 @Version注解</span><br><span class=\"line\">\t2.添加乐观锁拦截器</span><br><span class=\"line\">\t3.查询数据库中的数据和版本号，调用修改操作，把要修改的数据和刚才查询出来的版本号都设置进去</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day16-Maven高级\"><a href=\"#Day16-Maven高级\" class=\"headerlink\" title=\"Day16 - Maven高级\"></a>Day16 - Maven高级</h1><h2 id=\"1-分模块开发\"><a href=\"#1-分模块开发\" class=\"headerlink\" title=\"1. 分模块开发\"></a>1. 分模块开发</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分模块开发的好处？</span><br><span class=\"line\">\t解耦、便于开发、便于维护、便于复用</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何分模块开发？</span><br><span class=\"line\">\t水平拆分：分层拆分</span><br><span class=\"line\">\t垂直拆分：按业务拆分</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在A模块中使用B模块？</span><br><span class=\"line\">\t&lt;dependency&gt;引入即可</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-继承\"><a href=\"#2-继承\" class=\"headerlink\" title=\"2. 继承\"></a>2. 继承</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">继承的作用？\t</span><br><span class=\"line\">\t简化了依赖配置</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何实现继承？</span><br><span class=\"line\">\t1. 在父pom文件中设置打包方式为pom  &lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class=\"line\">\t2. 在子模块中使用&lt;parent&gt;标签设置父模块</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencyManagement&gt;和&lt;dependencies&gt;的区别</span><br><span class=\"line\">\t&lt;dependencyManagement&gt;：锁定版本号，并没有真正引入依赖。可以减少依赖冲突</span><br><span class=\"line\">\t&lt;dependencies&gt;: 真正引入依赖</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;标签的作用？</span><br><span class=\"line\">\t配置pom文件中的属性/变量，使用变量$&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-聚合\"><a href=\"#3-聚合\" class=\"headerlink\" title=\"3. 聚合\"></a>3. 聚合</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">聚合的作用？</span><br><span class=\"line\">\t构建聚合工程的时候，子工程也会跟着构建</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何用聚合实现多工程统一构建？</span><br><span class=\"line\">\t在聚合工程中使用&lt;modules&gt;设置聚合工程有几个子工程</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">聚合和继承的区别？</span><br><span class=\"line\">\t继承：子模块继承父模块的依赖和配置，在子模块中配置继承关系</span><br><span class=\"line\">\t聚合：工程的统一构建，在聚合工程中配置聚合关系</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-私服\"><a href=\"#4-私服\" class=\"headerlink\" title=\"4. 私服\"></a>4. 私服</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">私服的作用？</span><br><span class=\"line\">\t团队间的资源共享</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下载：在setting.xml中配置 用户名密码(&lt;server&gt;)、私服仓库的镜像（&lt;mirrors&gt; url）</span><br><span class=\"line\">上传：在pom.xml文件中配置私服的url路径，点击 install、deploy就可以上传依赖到私服了</span><br></pre></td></tr></table></figure>\n\n\n\n","more":"<h1 id=\"Day01-HTML-amp-CSS-amp-JS\"><a href=\"#Day01-HTML-amp-CSS-amp-JS\" class=\"headerlink\" title=\"Day01 - HTML&amp;CSS&amp;JS\"></a>Day01 - HTML&amp;CSS&amp;JS</h1><h2 id=\"1-web\"><a href=\"#1-web\" class=\"headerlink\" title=\"1.web\"></a>1.web</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是web？</span><br><span class=\"line\">\t万维网，浏览器可以访问的网站</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-HTML\"><a href=\"#2-HTML\" class=\"headerlink\" title=\"2.HTML\"></a>2.HTML</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是HTML？</span><br><span class=\"line\">\t超文本标记语言</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTML的作用？</span><br><span class=\"line\">\t控制 网页结构</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-HTML基础标签\"><a href=\"#2-1-HTML基础标签\" class=\"headerlink\" title=\"2.1 HTML基础标签\"></a>2.1 HTML基础标签</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【文本标签】</span><br><span class=\"line\">\t标题：&lt;h1&gt; &lt;h6&gt;</span><br><span class=\"line\">\t定义文本颜色、大小、字体：&lt;font color=&quot;&quot; size=&quot;&quot; face=&quot;&quot;&gt;</span><br><span class=\"line\">\t斜体：&lt;i&gt;</span><br><span class=\"line\">\t加粗：&lt;b&gt;</span><br><span class=\"line\">\t下划线：&lt;u&gt;</span><br><span class=\"line\">\t居中：&lt;center&gt;</span><br><span class=\"line\">\t段落：&lt;p&gt;</span><br><span class=\"line\">\t换行：&lt;br&gt;</span><br><span class=\"line\">\t水平线：&lt;hr&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【图片及音视频标签】</span><br><span class=\"line\">\t图片：&lt;img src=&quot;&quot; height=&quot;&quot; width=&quot;&quot;&gt;</span><br><span class=\"line\">\t音频：&lt;audio src=&quot;&quot; controls&gt;</span><br><span class=\"line\">\t视频：&lt;video src=&quot;&quot; controls&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【超链接及表格标签】</span><br><span class=\"line\">\t超链接：&lt;a href=&quot;&quot; target=&quot;&quot;&gt;</span><br><span class=\"line\">\t表格：&lt;table&gt;</span><br><span class=\"line\">\t\t行：&lt;tr&gt;</span><br><span class=\"line\">\t\t单元格：&lt;td&gt;</span><br><span class=\"line\">\t\t表头：&lt;th&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【布局标签】</span><br><span class=\"line\">\t定义html中区域：&lt;div&gt;</span><br><span class=\"line\">\t定义行内元素：&lt;span&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"2-2-HTML表单标签\"><a href=\"#2-2-HTML表单标签\" class=\"headerlink\" title=\"2.2 HTML表单标签\"></a>2.2 HTML表单标签</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【表单】：&lt;form action=&quot;&quot; method=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【GET和POST的区别】：</span><br><span class=\"line\">\tGET：表单数据拼接到url后，有大小限制</span><br><span class=\"line\">\tPOST：表单数据封装到请求体中，无大小限制</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【表单项】：</span><br><span class=\"line\">\t&lt;input&gt;：表单项，通过type来控制输入形式</span><br><span class=\"line\">\t\t文本输入框：text</span><br><span class=\"line\">\t\t密码：password</span><br><span class=\"line\">\t\t单选按钮：radio</span><br><span class=\"line\">\t\t复选框：checkbox</span><br><span class=\"line\">\t\t文件：file</span><br><span class=\"line\">\t\t隐藏域：hidden</span><br><span class=\"line\">\t\t提交按钮：submit</span><br><span class=\"line\">\t\t重置按钮：reset</span><br><span class=\"line\">\t\t可点击按钮：button</span><br><span class=\"line\">\t&lt;select&gt;：下拉列表，多个&lt;option&gt;指定下拉列表具体内容</span><br><span class=\"line\">\t&lt;textarea&gt;：文本域</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-CSS\"><a href=\"#3-CSS\" class=\"headerlink\" title=\"3. CSS\"></a>3. CSS</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CSS的作用？</span><br><span class=\"line\">\t控制页面的样式</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CSS三种引入方式？</span><br><span class=\"line\">\t内联方式：直接在标签中使用style属性配置样式</span><br><span class=\"line\">\t内部方式：在head标签中使用&lt;style&gt;标签定义样式</span><br><span class=\"line\">\t外部方式：在head标签中使用&lt;link&gt;标签引入外部css文件 从而引入样式</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CSS三种选择器</span><br><span class=\"line\">\t元素选择器：所有使用了该标签的元素 都会适配 定义的样式 div&#123;&#125;</span><br><span class=\"line\">\tid选择器：唯一，只能选择上一个元素  #id名&#123;&#125;</span><br><span class=\"line\">\tclass选择器：可以选择一类元素，也就是多个元素 .class名&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-JS\"><a href=\"#4-JS\" class=\"headerlink\" title=\"4. JS\"></a>4. JS</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS的作用？</span><br><span class=\"line\">\t控制网页的行为</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS的书写语法？</span><br><span class=\"line\">\t1.区分大小写</span><br><span class=\"line\">\t2.行尾的可有可无 建议写上</span><br><span class=\"line\">\t3.注释 单行注释//  多行注释 /* */</span><br><span class=\"line\">\t4.&#123;&#125;代表代码块</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS声明变量的关键字？</span><br><span class=\"line\">\t全局变量 var</span><br><span class=\"line\">\t局部变量 let</span><br><span class=\"line\">\t常量 const</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS控制语句 哪些会返回false？</span><br><span class=\"line\">\t0、NaN、空字符串、null、undefined 都返回false，其余都返回 true</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day02-JS-amp-Vue\"><a href=\"#Day02-JS-amp-Vue\" class=\"headerlink\" title=\"Day02 - JS &amp; Vue\"></a>Day02 - JS &amp; Vue</h1><h2 id=\"1-函数定义\"><a href=\"#1-函数定义\" class=\"headerlink\" title=\"1. 函数定义\"></a>1. 函数定义</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JS中函数定义的两种方式？</span><br><span class=\"line\">function add(a,b)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var add = function(a,b)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-JS中的对象\"><a href=\"#2-JS中的对象\" class=\"headerlink\" title=\"2. JS中的对象\"></a>2. JS中的对象</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【Array】</span><br><span class=\"line\">\t属性</span><br><span class=\"line\">\t\t获取数组长度：length</span><br><span class=\"line\">\t方法</span><br><span class=\"line\">\t\t遍历数组：forEach()</span><br><span class=\"line\">\t\t添加元素到末尾：push()</span><br><span class=\"line\">\t\t删除元素：splice()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【String】</span><br><span class=\"line\">\t属性</span><br><span class=\"line\">\t\t获取字符串长度：length</span><br><span class=\"line\">\t方法</span><br><span class=\"line\">\t\t获取指定角标的字符：charAt()</span><br><span class=\"line\">\t\t获取指定字符串的索引：indexOf()</span><br><span class=\"line\">\t\t去除字符串两端的空格：trim()</span><br><span class=\"line\">\t\t字符串截取：subString()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【JSON】</span><br><span class=\"line\">\t定义json：</span><br><span class=\"line\">\t\t1. 键值对类型</span><br><span class=\"line\">\t\t2. 所有键都要用&quot;&quot;括起来</span><br><span class=\"line\">\t\t3. 值：</span><br><span class=\"line\">\t\t\tString：用&quot;&quot;括起来</span><br><span class=\"line\">\t\t\t数字：直接写</span><br><span class=\"line\">\t\t\tboolean：直接写true、false</span><br><span class=\"line\">\t\t\t数组：[]</span><br><span class=\"line\">\t\t\t对象：&#123;&#125;</span><br><span class=\"line\">\tjson字符串 转json对象：JSON.parse</span><br><span class=\"line\">\tjs对象 转 json串：JSON.Stringify()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【BOM】浏览器对象模型</span><br><span class=\"line\">\twindow对象的方法</span><br><span class=\"line\">\t\t弹出警告框：alert()</span><br><span class=\"line\">\t\t弹出对话框：confirm()</span><br><span class=\"line\">\t\t周期执行的定时器：setInterval()</span><br><span class=\"line\">\t\t一次性执行的定时器：setTimeout()</span><br><span class=\"line\">\tlocation对象：</span><br><span class=\"line\">\t\t设置或者获取url的属性：href</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【DOM】文档对象模型</span><br><span class=\"line\">\t使用document对象获取Element元素对象</span><br><span class=\"line\">\t\t根据id获取元素：getElementById()</span><br><span class=\"line\">\t\t根据标签获取元素：getElementsByTagName()</span><br><span class=\"line\">\t\t根据名称获取元素：getElementsByName()</span><br><span class=\"line\">\t\t根据类名获取元素：getElementsByClassName()</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-事件监听\"><a href=\"#3-事件监听\" class=\"headerlink\" title=\"3. 事件监听\"></a>3. 事件监听</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何为元素绑定事件？</span><br><span class=\"line\">1.在html标签中 使用 事件属性 进行绑定</span><br><span class=\"line\">&lt;input type=&quot;button&quot; id=&quot;btn1&quot; value=&quot;事件绑定1&quot; onclick=&quot;on()&quot;&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function on()&#123;</span><br><span class=\"line\">        alert(&quot;按钮1被点击了...&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">2.使用DOM中的Element元素的事件属性进行绑定</span><br><span class=\"line\">&lt;input type=&quot;button&quot; id=&quot;btn2&quot; value=&quot;事件绑定2&quot;&gt;</span><br><span class=\"line\">document.getElementById(&#x27;btn2&#x27;).onclick = function()&#123;</span><br><span class=\"line\">    alert(&quot;按钮2被点击了...&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常见的事件？</span><br><span class=\"line\">\t鼠标单击：onclick</span><br><span class=\"line\">\t元素失去焦点：onblur</span><br><span class=\"line\">\t元素获取焦点：onfocus</span><br><span class=\"line\">\t页面加载完成：onload</span><br><span class=\"line\">\t表单提交：onsubmit</span><br><span class=\"line\">\t键盘的按键被按下：onkeydown</span><br><span class=\"line\">\t鼠标移到元素上：onmouseover</span><br><span class=\"line\">\t鼠标从元素上移开：onmouseout</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-Vue\"><a href=\"#4-Vue\" class=\"headerlink\" title=\"4. Vue\"></a>4. Vue</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue常见指令的作用：</span><br><span class=\"line\">\tv-bind：给html标签中的属性绑定数据模型</span><br><span class=\"line\">\tv-model：双向绑定，数据模型和view</span><br><span class=\"line\">\tv-if：条件控制，条件成立则渲染元素，条件不成立则不渲染</span><br><span class=\"line\">\tv-show：条件控制，不管条件是否成立都会渲染元素，通过display属性控制元素是否要展示</span><br><span class=\"line\">\tv-for：遍历</span><br><span class=\"line\">\tv-on：绑定事件</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue的生命周期方法：Vue挂载完成会调用哪个方法？</span><br><span class=\"line\">mounted() vue挂载完成/页面加载完成 后会自动调用该方法</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day03-Vue-amp-Element\"><a href=\"#Day03-Vue-amp-Element\" class=\"headerlink\" title=\"Day03 - Vue&amp;Element\"></a>Day03 - Vue&amp;Element</h1><h2 id=\"1-Ajax\"><a href=\"#1-Ajax\" class=\"headerlink\" title=\"1. Ajax\"></a>1. Ajax</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过Axios请求发送ajax请求 的两种方式</span><br><span class=\"line\">axios.get(&quot;url&quot;).then(result =&gt; &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">axios.post(&quot;url&quot;，&quot;id=1&quot;).then(result =&gt; &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-前后端分离开发\"><a href=\"#2-前后端分离开发\" class=\"headerlink\" title=\"2. 前后端分离开发\"></a>2. 前后端分离开发</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">好处：</span><br><span class=\"line\">\t便于开发、便于维护</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前后端分离的开发模式是什么样的？</span><br><span class=\"line\">\t前端开发前端代码，后端开发后端代码，后端定义接口文档（请求方式、请求路径、前后端、出参），前后端都按照接口文档进行开发即可</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-前端工程化开发\"><a href=\"#3-前端工程化开发\" class=\"headerlink\" title=\"3. 前端工程化开发\"></a>3. 前端工程化开发</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前端工程化开发的步骤：</span><br><span class=\"line\">\t1. 安装NodeJs</span><br><span class=\"line\">\t2. 安装Vue-cli</span><br><span class=\"line\">\t------上述为一次性操作------</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t3. 使用Vue-cli生成vue工程</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-ElementUI\"><a href=\"#4-ElementUI\" class=\"headerlink\" title=\"4. ElementUI\"></a>4. ElementUI</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ElementUI的作用：组件库</span><br><span class=\"line\">\t让我们可以开发美观的前端页面</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何进行ElementUI开发</span><br><span class=\"line\">\t1.安装ElementUI</span><br><span class=\"line\">\t2.在main.js文件中引入了ElementUI</span><br><span class=\"line\">\t------上述为一次性操作------</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t3.开发vue代码 到ElementUI官网复制粘贴</span><br><span class=\"line\">\t\t（1）Html：template （2）js：script （3）css：style</span><br><span class=\"line\">\t4.在App.vue中引入.vue文件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Vue路由\"><a href=\"#5-Vue路由\" class=\"headerlink\" title=\"5. Vue路由\"></a>5. Vue路由</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue路由的作用是什么？</span><br><span class=\"line\">\tvue路由 是一个路径管理器，它的作用是 当我们点击页面上一个按钮 后url发生变化，在页面中展示对应的视图</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-前端工程打包部署\"><a href=\"#6-前端工程打包部署\" class=\"headerlink\" title=\"6. 前端工程打包部署\"></a>6. 前端工程打包部署</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在Nigix服务器上部署前端代码？</span><br><span class=\"line\">\t1. 打包前端代码，把dist里的代码复制粘贴到 nigix的html目录下</span><br><span class=\"line\">\t2. 双击nigix.exe启动服务</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day04-Maven-amp-SpringBootWeb入门\"><a href=\"#Day04-Maven-amp-SpringBootWeb入门\" class=\"headerlink\" title=\"Day04 - Maven&amp;SpringBootWeb入门\"></a>Day04 - Maven&amp;SpringBootWeb入门</h1><h2 id=\"1-Maven\"><a href=\"#1-Maven\" class=\"headerlink\" title=\"1. Maven\"></a>1. Maven</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven的作用是什么？</span><br><span class=\"line\">\t项目管理和构建工具</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven的安装与配置</span><br><span class=\"line\">\t按照文档安装配置即可。如果clean都报错，必定maven配置有问题</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven的仓库有哪几类？</span><br><span class=\"line\">\t本地仓库</span><br><span class=\"line\">\t私服</span><br><span class=\"line\">\t中央仓库</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何使用Maven配置依赖？如何排除依赖？</span><br><span class=\"line\">\t&lt;dependencies&gt; </span><br><span class=\"line\">\t&lt;exclusions&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">依赖传递性</span><br><span class=\"line\">\t如果A依赖B，B依赖C，则A依赖C</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">依赖的范围有哪些？</span><br><span class=\"line\">\tcompile（默认）</span><br><span class=\"line\">\ttest</span><br><span class=\"line\">\tprovided</span><br><span class=\"line\">\truntime</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maven常见的生命周期</span><br><span class=\"line\">\tclean、compile、test、package、install</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-SpringBoot入门程序\"><a href=\"#2-SpringBoot入门程序\" class=\"headerlink\" title=\"2.SpringBoot入门程序\"></a>2.SpringBoot入门程序</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（1）创建SpringBoot</span><br><span class=\"line\">（2）编写请求处理器类 HelloController</span><br><span class=\"line\">\t@RestController 代表此类是请求处理器类</span><br><span class=\"line\">\t@RequestMapping 映射请求路径和后端方法</span><br><span class=\"line\">（3）启动服务</span><br><span class=\"line\">\t运行SpringBoot主启动类</span><br><span class=\"line\">\t@SpringBootApplication 标识此类是SpringBoot的主启动类</span><br><span class=\"line\"></span><br><span class=\"line\">扩展：pom.xml文件</span><br><span class=\"line\">\t&lt;parent&gt; 为当前pom制定了父pom，父pom中锁定了依赖的版本号，好处是减少依赖冲突</span><br><span class=\"line\">\tstarter 起步依赖：帮我们引入了许多依赖，简化了依赖配置</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-HTTP协议\"><a href=\"#3-HTTP协议\" class=\"headerlink\" title=\"3. HTTP协议\"></a>3. HTTP协议</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是HTTP协议？</span><br><span class=\"line\">\t超文本传输协议，规定了浏览器和服务器之间数据传输的规则</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP请求信息都有哪些部分？</span><br><span class=\"line\">\t请求行、请求头、请求体</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP响应信息都有哪些部分？</span><br><span class=\"line\">\t响应行、响应头、响应体</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP状态码分别代表什么含义？</span><br><span class=\"line\">1 开头：处理中，临时状态</span><br><span class=\"line\">2 开头：成功</span><br><span class=\"line\">3 开头：重定向</span><br><span class=\"line\">4 开头：浏览器错误</span><br><span class=\"line\">5 开头：服务器错误</span><br><span class=\"line\"></span><br><span class=\"line\">常见的状态：200/404/500</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-Tomcat服务器\"><a href=\"#4-Tomcat服务器\" class=\"headerlink\" title=\"4. Tomcat服务器\"></a>4. Tomcat服务器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装：解压</span><br><span class=\"line\">启动：/bin/startup.bat</span><br><span class=\"line\">部署项目：把项目代码复制到tomcat安装目录下的webapp目录中</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day05-SpringBootWeb请求响应\"><a href=\"#Day05-SpringBootWeb请求响应\" class=\"headerlink\" title=\"Day05 - SpringBootWeb请求响应\"></a>Day05 - SpringBootWeb请求响应</h1><h2 id=\"1-PostMan\"><a href=\"#1-PostMan\" class=\"headerlink\" title=\"1. PostMan\"></a>1. PostMan</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">postman的作用？</span><br><span class=\"line\">\t做接口测试</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-不同-请求类型-发送请求\"><a href=\"#1-1-不同-请求类型-发送请求\" class=\"headerlink\" title=\"1.1 不同 请求类型 发送请求\"></a>1.1 不同 请求类型 发送请求</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET：参数放在请求行的url后，使用postman放在param中</span><br><span class=\"line\">POST:参数放在请求体中，使用postman放在body</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-不同-参数类型-发送与接收请求\"><a href=\"#1-2-不同-参数类型-发送与接收请求\" class=\"headerlink\" title=\"1.2 不同 参数类型 发送与接收请求\"></a>1.2 不同 参数类型 发送与接收请求</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">简单类型/实体类：</span><br><span class=\"line\">\t前端：前端请求参数 和 后端形参保持一致即可</span><br><span class=\"line\">\t后端：后端用简单类型或实体类接收，如果参数名不一致，要加 @RequestParam(name=&quot;前端参数名&quot;)绑定参数</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组/集合：</span><br><span class=\"line\">\t前端：前端请求参数 和 后端形参保持一致；参数写多个</span><br><span class=\"line\">\t后端：使用数组或集合接收，如果用集合接收，形参前要加一个@RequestParam绑定参数</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">日期：</span><br><span class=\"line\">\t前端：按照后端指定的日期格式进行传参</span><br><span class=\"line\">\t后端：使用@DateTimeFormat(pattern=&quot;&quot;)指定日期格式</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">json格式：</span><br><span class=\"line\">\t前端：要使用post方式，选择body-》row-》json进行传参</span><br><span class=\"line\">\t后端：使用实体类接收，实体类前添加@RequestBody注解</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">路径格式：</span><br><span class=\"line\">\t前端：/path/1</span><br><span class=\"line\">\t后端：在路径中使用&#123;id&#125;作为占位符；形参和路径中的参数变量保持一致；形参前要添加@PathVariable</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【总结】</span><br><span class=\"line\">\t前端：</span><br><span class=\"line\">\t\t前端请求参数 和 后端形参保持一致</span><br><span class=\"line\">\t\tjson传参：body -》 row -》json</span><br><span class=\"line\">\t后端：</span><br><span class=\"line\">\t\t如果请求参数名和形参不一致 或 使用List接收数据 形参前要添加@RequestParam</span><br><span class=\"line\">\t\t如果是日期传参，要添加 @DateTimeFormat(pattern=&quot;&quot;)</span><br><span class=\"line\">\t\t如果是json传参，要添加 @RequestBody</span><br><span class=\"line\">\t\t如果是路径变量传参：路径要加&#123;&#125;占位符，形参前要添加@PathVariable</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-返回响应\"><a href=\"#1-3-返回响应\" class=\"headerlink\" title=\"1.3 返回响应\"></a>1.3 返回响应</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回响应需要用到哪个注解？</span><br><span class=\"line\">\t@ResponseBody把当前方法返回值放在响应体中，如果返回值是实体类或集合，会默认转换成json格式，并放到响应体中</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-分层架构\"><a href=\"#2-分层架构\" class=\"headerlink\" title=\"2.分层架构\"></a>2.分层架构</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">三层架构中每一层的职责：</span><br><span class=\"line\">\tcontroller：控制层 用于接收请求和返回响应</span><br><span class=\"line\">\tservice：业务逻辑处理层</span><br><span class=\"line\">\tdao：数据操作层（持久层）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分层后各层之间的解耦思路</span><br><span class=\"line\">\t高内聚低耦合</span><br><span class=\"line\">\t内聚：单个模块内部功能联系程度，越高越好 UserController内部只处理用户相关功能，不处理其他功能</span><br><span class=\"line\">\t耦合：各个模块之间功能联系程度，越低越好 UserController和OrderController之间依赖影响越低越好</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t实现思路：使用Spring容器中的IOC和DI</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Spring容器的作用是什么？</span><br><span class=\"line\">\t背景：Springboot基于Spring的框架，Spring容器是Spring的组件</span><br><span class=\"line\">\t作用：创建并管理对象</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-IOC和DI\"><a href=\"#3-IOC和DI\" class=\"headerlink\" title=\"3. IOC和DI\"></a>3. IOC和DI</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是IOC？（Inverse Of Controller）</span><br><span class=\"line\">\t控制反转，反转的是对象的创建权，从程序员new对象 反转为 Spring容器 new对象</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是DI？</span><br><span class=\"line\">\t依赖注入，给容器中bean的属性赋值</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">声明bean的注解？（即把对象放入容器中的注解）</span><br><span class=\"line\">@Component</span><br><span class=\"line\">\t@Controller</span><br><span class=\"line\">\t@Service</span><br><span class=\"line\">\t@Repository</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">依赖注入的注解?</span><br><span class=\"line\">\t@Autowired：按照类型注入</span><br><span class=\"line\">\t@Qualifier：按照名称注入 要和@Autowired搭配使用</span><br><span class=\"line\">\t@Resource：按照名称注入 = @Autowired + @Qualifier</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day06-MySQL\"><a href=\"#Day06-MySQL\" class=\"headerlink\" title=\"Day06 - MySQL\"></a>Day06 - MySQL</h1><h2 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mysql数据库的作用</span><br><span class=\"line\">\t存储和管理数据的仓库</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mysql数据库的使用</span><br><span class=\"line\">安装 ：解压</span><br><span class=\"line\">启动 ：net start mysql</span><br><span class=\"line\">连接 ：mysql -uroot -proot</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常见Sql语句的分类</span><br><span class=\"line\">\tDDL：数据库定义语言，对库和表进行增删改查</span><br><span class=\"line\">\tDML: 数据库操作语言，对表中的数据进行增删改</span><br><span class=\"line\">\tDQL: 数据库查询语言，对表中数据进行查询</span><br><span class=\"line\">\tDCL: 数据库控制语言，用于控制权限</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-DDL\"><a href=\"#2-DDL\" class=\"headerlink\" title=\"2.DDL\"></a>2.DDL</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">常见DDL语句</span><br><span class=\"line\">【数据库】</span><br><span class=\"line\">\t创建：create database db01;</span><br><span class=\"line\">\t查询：show databases;</span><br><span class=\"line\">\t使用：use db01;</span><br><span class=\"line\">\t删除：drop database db01;</span><br><span class=\"line\">\t创建：</span><br><span class=\"line\">\t\tcreate table user(</span><br><span class=\"line\">\t\t\t字段名 字段类型 [约束]  [comment &#x27;字段说明&#x27;],</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t字段名 字段类型 [约束]  [comment &#x27;字段说明&#x27;]</span><br><span class=\"line\">\t\t)comment &#x27;用户表&#x27;;</span><br><span class=\"line\">\t查询 掌握图形化界面使用</span><br><span class=\"line\">\t修改</span><br><span class=\"line\">\t删除</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">约束</span><br><span class=\"line\">\t非空约束 not null</span><br><span class=\"line\">\t唯一约束 unique</span><br><span class=\"line\">\t主键约束 primary key</span><br><span class=\"line\">\t默认约束 default</span><br><span class=\"line\">\t外键约束 foreign key</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何根据产品原型和需求设计数据库和表结构？</span><br><span class=\"line\">\t表结构设计：</span><br><span class=\"line\">\t\t原型字段：需要哪些字段、字段类型、约束</span><br><span class=\"line\">\t\t基础字段：id、create_time、update_time</span><br><span class=\"line\">\t\t表结构：原型字段 + 基础字段</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-DML\"><a href=\"#3-DML\" class=\"headerlink\" title=\"3. DML\"></a>3. DML</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新增数据：</span><br><span class=\"line\">\tinsert into 表名(字段列表) values(字段值列表)，(字段值列表)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改数据：</span><br><span class=\"line\">\tupdate 表名 set 字段名1=字段值1，字段名2=字段值2 where 条件</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">删除数据：</span><br><span class=\"line\">\tdelete from 表名 where 条件</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day07-MySQL多表\"><a href=\"#Day07-MySQL多表\" class=\"headerlink\" title=\"Day07 - MySQL多表\"></a>Day07 - MySQL多表</h1><h2 id=\"1-DQL\"><a href=\"#1-DQL\" class=\"headerlink\" title=\"1. DQL\"></a>1. DQL</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DQL语法：</span><br><span class=\"line\">\tselect</span><br><span class=\"line\">\t\t字段列表</span><br><span class=\"line\">\tfrom</span><br><span class=\"line\">\t\t表名列表</span><br><span class=\"line\">\twhere</span><br><span class=\"line\">\t\t条件列表</span><br><span class=\"line\">\tgroup by </span><br><span class=\"line\">\t\t分组列表</span><br><span class=\"line\">\thaving</span><br><span class=\"line\">\t\t分组过滤条件列表</span><br><span class=\"line\">\torder by</span><br><span class=\"line\">\t\t排序字段列表</span><br><span class=\"line\">\tlimit</span><br><span class=\"line\">\t\t分页参数</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【基础查询】</span><br><span class=\"line\">\tselect 字段列表 from 表名</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tselect * from 表名</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【条件查询】</span><br><span class=\"line\">比较运算符：</span><br><span class=\"line\">\t数学运算符：&gt; &gt;= &lt; &lt;= =</span><br><span class=\"line\">\t不等于：!=  &lt;&gt;</span><br><span class=\"line\">\t范围：between and （包含最大值和最小值）</span><br><span class=\"line\">\t列表中多选一：in()</span><br><span class=\"line\">\t模糊查询：like</span><br><span class=\"line\">\t\t占位符：</span><br><span class=\"line\">\t\t\t_:一个任意字符</span><br><span class=\"line\">\t\t\t%:0个或多个任意字符</span><br><span class=\"line\">\t是null：is null</span><br><span class=\"line\">逻辑运算符：\t</span><br><span class=\"line\">\t并且：and</span><br><span class=\"line\">\t或：or</span><br><span class=\"line\">\t不是：not !</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【聚合】</span><br><span class=\"line\">\t查询数量：count(*)</span><br><span class=\"line\">\t最大值：max()</span><br><span class=\"line\">\t最小值：min()</span><br><span class=\"line\">\t平均值：avg()</span><br><span class=\"line\">\t求和：sum()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【分组】</span><br><span class=\"line\">\tgroup by ... having</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【排序】</span><br><span class=\"line\">\torder by</span><br><span class=\"line\">\t排序方式：</span><br><span class=\"line\">\t\tasc:升序 （默认）</span><br><span class=\"line\">\t\tdesc：降序</span><br><span class=\"line\">\t如果排序字段有多个，那么先按照第一个字段排序，如果第一个字段相等，再按照第二个字段进行排序</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【分页查询】</span><br><span class=\"line\">\tlimit 起始索引, 每页查询数量</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t起始索引 从0开始</span><br><span class=\"line\">\t起始索引 = （查询页数 - 1） * 每页查询数量</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-多表\"><a href=\"#2-多表\" class=\"headerlink\" title=\"2. 多表\"></a>2. 多表</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表之间的关系有哪三种，分别怎么维护？</span><br><span class=\"line\">\t一对一：任意在一个表中建立另一个表的外键</span><br><span class=\"line\">\t一对多：在多对应的表中 建立 一对应的表的外键</span><br><span class=\"line\">\t多对多：建立中间表，中间表中分别建立另两张表的外键</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">外键的作用</span><br><span class=\"line\">\t可以通过外键关联到另外一张表的数据</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">多表设计的思路和流程</span><br><span class=\"line\">\t1.根据需求文档和页面原型 分析 表关系</span><br><span class=\"line\">\t2.根据需求文档和页面原型 分析 表结构</span><br><span class=\"line\">\t\t字段、字段类型、约束</span><br><span class=\"line\">\t3.创建表</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day08-MySQL-amp-MyBatis入门\"><a href=\"#Day08-MySQL-amp-MyBatis入门\" class=\"headerlink\" title=\"Day08 - MySQL&amp;MyBatis入门\"></a>Day08 - MySQL&amp;MyBatis入门</h1><h2 id=\"1-多表查询\"><a href=\"#1-多表查询\" class=\"headerlink\" title=\"1. 多表查询\"></a>1. 多表查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">连接查询的基础语法</span><br><span class=\"line\">\t内连接：</span><br><span class=\"line\">\t\t隐式内连接：</span><br><span class=\"line\">\t\t\tselect * from 表A, 表B where 关联条件</span><br><span class=\"line\">\t\t显式内连接：</span><br><span class=\"line\">\t\t\tselect * from 表A</span><br><span class=\"line\">\t\t\tjoin 表B on 关联条件</span><br><span class=\"line\">\t外连接：</span><br><span class=\"line\">\t\t左连接：</span><br><span class=\"line\">\t\t\tselect * from 表A</span><br><span class=\"line\">\t\t\tleft join 表B on 关联条件</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">内连接和外连接的区别？</span><br><span class=\"line\">\t内连接：取两张表的交集</span><br><span class=\"line\">\t外连接：取左表的全部数据 和 右表能关联上的数据</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">子查询</span><br><span class=\"line\">\t标量子查询：常量 = &lt; &lt;= &gt; &gt;=</span><br><span class=\"line\">\t列子查询：子查询结果只有一列，可以认为是一个列表   in</span><br><span class=\"line\">\t行子查询：子查询结果只有一行 </span><br><span class=\"line\">\t表子查询：子查询结果是一张临时表，可以把子查询结果当做一张临时表使用</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何完成多表查询操作？</span><br><span class=\"line\">\t1. 分析要查询哪些字段</span><br><span class=\"line\">\t2. 看这些字段在哪些表中</span><br><span class=\"line\">\t3. 分析表之间的关联条件</span><br><span class=\"line\">\t4. 查看是否有其他条件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-事务\"><a href=\"#2-事务\" class=\"headerlink\" title=\"2. 事务\"></a>2. 事务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是事务？</span><br><span class=\"line\">\t事务是多个操作的集合，这些操作要么同时成功，要么同时失败</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何开启事务、提交事务、回滚事务？</span><br><span class=\"line\">\t开启事务：start transation; / begin;</span><br><span class=\"line\">\t提交事务：commit;</span><br><span class=\"line\">\t回滚事务：rollback;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事务的四大特性是什么？</span><br><span class=\"line\">\t原子性、一致性、隔离性、持久性</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-索引\"><a href=\"#3-索引\" class=\"headerlink\" title=\"3. 索引\"></a>3. 索引</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是索引？</span><br><span class=\"line\">\t是一种提高查询效率的数据结构，B+Tree(多路平衡搜索树)</span><br><span class=\"line\">\t优点：提高查询效率和排序效率</span><br><span class=\"line\">\t缺点：占用空间，数据增删改的时候维护索引需要性能开销</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">索引的操作</span><br><span class=\"line\">\t创建：create index 索引名 on 表名(字段名)</span><br><span class=\"line\">\t删除：drop index 索引名 on 表名</span><br><span class=\"line\">\t查询：show index from 表名</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL数据库索引的数据结构</span><br><span class=\"line\">\tB+Tree(多路平衡搜索树)</span><br><span class=\"line\">\t\t（1）每个节点上有多个key，也就有多路分支</span><br><span class=\"line\">\t\t（2）所有数据都存储在叶子节点，非叶子节点只存储索引</span><br><span class=\"line\">\t\t（3）叶子节点是天然有序的双向链表，便于数据的排序和范围查询</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-Mybatis入门\"><a href=\"#4-Mybatis入门\" class=\"headerlink\" title=\"4. Mybatis入门\"></a>4. Mybatis入门</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpringBoot-Mybatis入门程序</span><br><span class=\"line\">\t1. 准备工作：创建数据库和表，创建了工程，user实体类</span><br><span class=\"line\">\t2. 在application.properties中 配置数据库连接：驱动、url、username、password</span><br><span class=\"line\">\t3. 编写Mapper接口，@Mapper @Select(&quot;select * from user&quot;)</span><br><span class=\"line\">\t4. 测试</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是数据库驱动？</span><br><span class=\"line\">\tjava程序连接数据库的工具</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是JDBC ？</span><br><span class=\"line\">\tJDBC是用于操作 数据库驱动这个工具 的API接口</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据库连接池的作用？</span><br><span class=\"line\">\t数据库连接池 是一个容器，用于创建、管理数据库连接</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day09-Mybatis\"><a href=\"#Day09-Mybatis\" class=\"headerlink\" title=\"Day09 - Mybatis\"></a>Day09 - Mybatis</h1><h2 id=\"1-Mybatis基础操作\"><a href=\"#1-Mybatis基础操作\" class=\"headerlink\" title=\"1. Mybatis基础操作\"></a>1. Mybatis基础操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">预编译SQL的优势是什么？</span><br><span class=\"line\">\t更高效：把预编译的sql缓存了起来</span><br><span class=\"line\">\t更安全：防止sql注入，把密码当做一整个字符串传入sql语句，如果密码中有引号，会进行转义</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数占位符$&#123;&#125; 与 #&#123;&#125;的区别</span><br><span class=\"line\">\t$&#123;&#125;：直接把参数拼装到sql中，不能防止sql注入</span><br><span class=\"line\">\t#&#123;&#125;：使用预编译的方式 把参数做为一个整体 替换 ?, 可以防止sql注入</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mybatis开发增删改查接口分别使用哪个注解？</span><br><span class=\"line\">\t增：@Insert</span><br><span class=\"line\">\t删：@Delete</span><br><span class=\"line\">\t改：@Update</span><br><span class=\"line\">\t查：@Select</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新增数据如何获取到主键?</span><br><span class=\"line\">\t@Options(useGeneratedKeys = true, keyProperty = &quot;id&quot;)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"2-基于XML开发Mybatis\"><a href=\"#2-基于XML开发Mybatis\" class=\"headerlink\" title=\"2. 基于XML开发Mybatis\"></a>2. 基于XML开发Mybatis</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mybatis中XML映射文件的开发规范</span><br><span class=\"line\">\t1.同包同名: xml文件和mapper文件的包名、文件名保持一致</span><br><span class=\"line\">\t2.xml的namespace 和 mapper的全限定类名保持一致</span><br><span class=\"line\">\t3.xml中的id 和 mapper的方法名保持一致</span><br><span class=\"line\">只有按照这个格式开发，将来调用到mapper中的方法，才能找到xml文件中对应的sql语句</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;if&gt;标签的作用和用法</span><br><span class=\"line\">\t作用：如果if标签中条件成立，则拼接sql，否则不拼接</span><br><span class=\"line\">\t用法：&lt;if test=&quot;name != null&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;where&gt;和&lt;set&gt;标签的应用场景和作用</span><br><span class=\"line\">\t应用场景：</span><br><span class=\"line\">\t\t&lt;where&gt;条件查询 &lt;set&gt;update更新的时候使用</span><br><span class=\"line\">\t作用：</span><br><span class=\"line\">\t\t&lt;where&gt;：动态拼接 where，去除多余的AND/OR</span><br><span class=\"line\">\t\t&lt;set&gt;: 动态拼接set，去除多余的逗号</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;foreach&gt;标签的用法</span><br><span class=\"line\">\t&lt;foreach colletion=&quot;ids&quot; item=&quot;id&quot; separator=&quot;,&quot; open=&quot;(&quot; close=&quot;)&quot;&gt;</span><br><span class=\"line\">\t\t#&#123;id&#125;</span><br><span class=\"line\">\t&lt;/foreach&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;sql&gt;和&lt;include&gt;的作用</span><br><span class=\"line\">\t&lt;sql id=&quot;aaa&quot;&gt;：抽取公共的sql片段</span><br><span class=\"line\">\t&lt;include refid=&quot;aaa&quot;&gt;：使用sql片段</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day10-SpringBootWeb\"><a href=\"#Day10-SpringBootWeb\" class=\"headerlink\" title=\"Day10 - SpringBootWeb\"></a>Day10 - SpringBootWeb</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REST风格</span><br><span class=\"line\">\t请求路径 + 请求方式 唯一确定一个后端方法</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t增：POST     /users</span><br><span class=\"line\">\t删：DELETE   /users/1   </span><br><span class=\"line\">\t改：PUT      /users</span><br><span class=\"line\">\t查：GET      /users/1</span><br><span class=\"line\">\t查全部：GET   /users</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day11-SpringBootWeb-案例2\"><a href=\"#Day11-SpringBootWeb-案例2\" class=\"headerlink\" title=\"Day11 - SpringBootWeb - 案例2\"></a>Day11 - SpringBootWeb - 案例2</h1><h2 id=\"1-文件上传\"><a href=\"#1-文件上传\" class=\"headerlink\" title=\"1. 文件上传\"></a>1. 文件上传</h2><h3 id=\"1-1-本地文件上传\"><a href=\"#1-1-本地文件上传\" class=\"headerlink\" title=\"1.1 本地文件上传\"></a>1.1 本地文件上传</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件上传 前端页面三要素</span><br><span class=\"line\">(1) 表单提交方式 必须是 POST</span><br><span class=\"line\">(2) 表单的encType属性值 必须是 mutipart/form-data</span><br><span class=\"line\">(3) 表单项的type属性值 必须是 file</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件上传 后端接收文件二要素</span><br><span class=\"line\">（1）形参类型必须是 MutipartFile</span><br><span class=\"line\">（2）形参名必须和表单项名称保持一致</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-阿里云OSS文件上传\"><a href=\"#1-2-阿里云OSS文件上传\" class=\"headerlink\" title=\"1.2 阿里云OSS文件上传\"></a>1.2 阿里云OSS文件上传</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件上传：</span><br><span class=\"line\">\t1. 注册账号，创建Bucket、AKSK</span><br><span class=\"line\">\t2. 导入依赖，导入阿里云文件上传工具类 </span><br><span class=\"line\">\t3. 编写文件上传代码 形参类型为MutipartFile，形参名是image 和前端请求参数保持一致，再调用文件上传工具类即可</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-YML\"><a href=\"#2-YML\" class=\"headerlink\" title=\"2. YML\"></a>2. YML</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">YML文件的语法格式</span><br><span class=\"line\">\t（1）以冒号结尾</span><br><span class=\"line\">\t（2）属性值 和 属性名之间用冒号连接，冒号和属性值之间一定要加一个空格</span><br><span class=\"line\">\t（3）用空格缩进表示层级关系</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">读取YML文件的配置信息</span><br><span class=\"line\">\t@Value：读取配置文件中的值，读取单个属性</span><br><span class=\"line\">\t@ConfigurationProperties(prefix=&quot;aliyun.oss&quot;)：读取配置文件中的值到实体类中 批量读取属性</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day12-Web登录认证\"><a href=\"#Day12-Web登录认证\" class=\"headerlink\" title=\"Day12 - Web登录认证\"></a>Day12 - Web登录认证</h1><h2 id=\"1-会话技术\"><a href=\"#1-会话技术\" class=\"headerlink\" title=\"1.会话技术\"></a>1.会话技术</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是会话？</span><br><span class=\"line\">\t一个浏览器和一个服务器建立一次连接的过程就是一次会话，浏览器或服务器断开连接则会话结束。一次会话中可以有多次请求</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">会话跟踪技术的作用？</span><br><span class=\"line\">\t在一次会话的多次请求间共享数据</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">会话跟踪技术有哪些？</span><br><span class=\"line\">\tcookie：客户端会话跟踪技术</span><br><span class=\"line\">\tsession：服务端会话跟踪技术</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cookie的原理</span><br><span class=\"line\">\t多次请求 携带的是同一个 cookie，就在客户端实现了数据共享</span><br><span class=\"line\"></span><br><span class=\"line\">缺点：</span><br><span class=\"line\">\t不能在移动端使用</span><br><span class=\"line\">\t不安全，因为用户可以禁用cookie</span><br><span class=\"line\">\t不能跨域</span><br><span class=\"line\">\t</span><br><span class=\"line\">【跨域】：</span><br><span class=\"line\">\t判断两次请求中 协议、ip/域名、端口号 是否不一致，如果不一致则跨域了</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session的原理</span><br><span class=\"line\">  多次请求在cookie中携带的是同一个sessionId，就能在服务器中找到同一个session，就实现了服务端的数据共享</span><br><span class=\"line\"></span><br><span class=\"line\">缺点：</span><br><span class=\"line\">\t集群中不能使用session共享数据</span><br><span class=\"line\">\tcookie的所有缺点（因为session是基于cookie实现的）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JWT令牌的三个组成部分</span><br><span class=\"line\">\theader：令牌类型 和 签名算法</span><br><span class=\"line\">\tpayload：自定义数据</span><br><span class=\"line\">\tsignature：签名</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">JWT令牌的生成和校验</span><br><span class=\"line\">\t使用Jwts工具类 生成令牌和校验令牌</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">登录校验中使用令牌</span><br><span class=\"line\">\t令牌生成：登录成功后 生成令牌 并返回给前端</span><br><span class=\"line\">\t令牌校验：（除了登录之外的）每次请求都需要校验令牌，统一拦截校验</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-Filter-过滤器\"><a href=\"#2-Filter-过滤器\" class=\"headerlink\" title=\"2. Filter 过滤器\"></a>2. Filter 过滤器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器的作用：</span><br><span class=\"line\">\t拦截请求 并在放行前后 做一些逻辑处理</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器入门程序</span><br><span class=\"line\">\t1.定义 实现 Filter接口</span><br><span class=\"line\">\t2.添加注解</span><br><span class=\"line\">\t\t@WebFilter(urlPatterns=&quot;/*&quot;)</span><br><span class=\"line\">\t\t@ServletComponentScan //开启Servlet组件扫描，只有开启了才能扫描到@WebFilter</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器的执行流程</span><br><span class=\"line\">\t1. 放行前逻辑</span><br><span class=\"line\">\t2. 放行</span><br><span class=\"line\">\t3. 执行目标方法</span><br><span class=\"line\">\t4. 放行后逻辑</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">登录校验过滤器的作用</span><br><span class=\"line\">\t统一拦截所有请求，并判断令牌的合法性，如果合法则放行，如果并不合法，则返回NOT_LOGIN</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-Interceptor-拦截器\"><a href=\"#3-Interceptor-拦截器\" class=\"headerlink\" title=\"3. Interceptor 拦截器\"></a>3. Interceptor 拦截器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">拦截器的入门程序</span><br><span class=\"line\"> \t1.定义拦截器 实现HandlerInterceptor，并重写preHandler、postHander、AfterComplection</span><br><span class=\"line\"> \t2.注册拦截器 定义配置类，并实现WebMvcConfiguer，并添加 @Configuration</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">拦截器的执行顺序</span><br><span class=\"line\">\tpreHandler</span><br><span class=\"line\">\t\treturn true </span><br><span class=\"line\">\t\t\t执行目标方法</span><br><span class=\"line\">\t\t\tpostHander</span><br><span class=\"line\">\t\t\tAfterComplection</span><br><span class=\"line\">\t\treturn false</span><br><span class=\"line\">\t\t\t拦截请求</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过滤器和拦截器的区别</span><br><span class=\"line\">\t1. 如果过滤器和拦截器同时存在，那么请求先进入过滤器，过滤器放行再进入拦截器</span><br><span class=\"line\">\t2. 过滤器实现Filter接口，拦截器实现 HandlerInterceptor接口</span><br><span class=\"line\">\t3. 过滤器拦截所有请求，拦截器只拦截controller</span><br><span class=\"line\">\t4. 实现原理不同：过滤器基于回调实现，拦截器基于反射实现</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-全局异常处理器\"><a href=\"#4-全局异常处理器\" class=\"headerlink\" title=\"4. 全局异常处理器\"></a>4. 全局异常处理器</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">定义全局异常处理器</span><br><span class=\"line\">\t@RestControllerAdvice：放在类上，标明此类是一个异常处理器类</span><br><span class=\"line\">\t@ExceptionHandler(Exception.class)：放在方法上，指定当前方法捕获哪一类异常</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day13-事务管理-amp-AOP\"><a href=\"#Day13-事务管理-amp-AOP\" class=\"headerlink\" title=\"Day13 - 事务管理 &amp; AOP\"></a>Day13 - 事务管理 &amp; AOP</h1><h2 id=\"1-事务\"><a href=\"#1-事务\" class=\"headerlink\" title=\"1. 事务\"></a>1. 事务</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在Spring中完成事务管理</span><br><span class=\"line\">\t@Transactional</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事务属性 rollback的作用</span><br><span class=\"line\">\t指定哪些异常要回滚，一般指定所有异常都要回滚</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">事务传播行为propagation的作用</span><br><span class=\"line\">\tpropagation: 控制事务传播行为，当业务层方法之间相互调用发生事务嵌套时，内层事务是否要和外层同成功同失败</span><br><span class=\"line\">\t- REQUIRED：默认内外层使用同一个事物，同成功同失败</span><br><span class=\"line\">\t- REQUIRES_NEW：内外层事务之间互不影响</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-AOP\"><a href=\"#2-AOP\" class=\"headerlink\" title=\"2. AOP\"></a>2. AOP</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是AOP？</span><br><span class=\"line\">\t面向切面编程</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AOP的作用？</span><br><span class=\"line\">\t在不改变原始代码的基础上进行功能增强</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AOP的核心概念</span><br><span class=\"line\">\t连接点：所有可以进行功能增强的方法都是连接点</span><br><span class=\"line\">\t切入点：进行了功能增强的方法就是切入点</span><br><span class=\"line\">\t通知：共性功能</span><br><span class=\"line\">\t切面：切入点 + 通知</span><br><span class=\"line\">\t目标对象：通知所应用的对象就是目标对象</span><br><span class=\"line\">\t切入点表达式：指定哪些方法是切入点</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AOP常见通知类型</span><br><span class=\"line\">\t前置通知：@Before</span><br><span class=\"line\">\t后置通知：@After</span><br><span class=\"line\">\t环绕通知：@Around</span><br><span class=\"line\">\t返回后通知：@AfterReturning</span><br><span class=\"line\">\t异常后通知：@AfterThrowing</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">切入点表达式的写法</span><br><span class=\"line\">\t写法一：@PointCut(&quot;execution(访问修饰符 返回值 包名.类名.方法名(参数))&quot;)</span><br><span class=\"line\">\t\t通配符：</span><br><span class=\"line\">\t\t\t* 单个或半个任意符号 多用于模糊匹配</span><br><span class=\"line\">\t\t\t.. 多个连续任意符号 多用于参数省略或包名省略</span><br><span class=\"line\">\t写法二：@PointCut(&quot;@annotation(注解的全路径类名)&quot;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过连接点对象获取目标方法的信息</span><br><span class=\"line\">\t获取类名：joinPoint.getTarget().getClass().getName()</span><br><span class=\"line\">\t获取方法名：joinPoint.getSignature().getName()</span><br><span class=\"line\">\t获取参数：joinPoint.getArgs()</span><br><span class=\"line\">\t执行目标方法：joinPoint.proceed()</span><br><span class=\"line\">\t获取返回值：Object result = joinPoint.proceed()</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day14-自动配置原理\"><a href=\"#Day14-自动配置原理\" class=\"headerlink\" title=\"Day14 - 自动配置原理\"></a>Day14 - 自动配置原理</h1><h2 id=\"1-配置文件\"><a href=\"#1-配置文件\" class=\"headerlink\" title=\"1. 配置文件\"></a>1. 配置文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Springboot配置文件的优先级</span><br><span class=\"line\">\tproperties、yml、yaml</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpringBoot的jar包启动</span><br><span class=\"line\">\tjava -jar xxx.jar </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-管理bean\"><a href=\"#2-管理bean\" class=\"headerlink\" title=\"2. 管理bean\"></a>2. 管理bean</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">手动从容器中获取bean</span><br><span class=\"line\">\tapplicationContext.getBean(&quot;&quot;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置bean的作用域</span><br><span class=\"line\">\t@Scope</span><br><span class=\"line\">\t\tsingleton：单例</span><br><span class=\"line\">\t\tprototype：非单例</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Bean注解的作用</span><br><span class=\"line\">\t管理第三方bean时使用，作用是：把当前方法的返回值放到Spring容器中</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-自动配置原理\"><a href=\"#3-自动配置原理\" class=\"headerlink\" title=\"3. 自动配置原理\"></a>3. 自动配置原理</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自动配置</span><br><span class=\"line\">\t在容器启动的时候，自动把一些配置类或bean放到Spring容器中，这些不需要我们手动操作，只需要拿来即用即可</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自动配置原理：</span><br><span class=\"line\">\t在主启动类的核心注解里，有一个自动配置注解@EnableAutoConfiguration，这个注解会自动扫描spring.factories和AutoConfiguration.imports这两个文件，文件内部定义了一些xxxAutoConfiguration，里边使用了@Bean注解把对象放到Spring容器中</span><br><span class=\"line\">\t</span><br><span class=\"line\">自动配置注解：@EnableAutoConfiguration</span><br><span class=\"line\">自动配置文件：spring.factories 和 AutoConfiguration.imports 文件</span><br><span class=\"line\">自动配置类：xxxAutoConfiguration（@Bean）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Import注解的作用</span><br><span class=\"line\">\t把类对应的对象导入到容器中</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Conditional注解的作用</span><br><span class=\"line\">\t满足条件的bean才会被放到Spring容器中</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Conditional衍生注解</span><br><span class=\"line\">\t@ConditionalOnClass：环境中存在该字节码对象 才会把bean放到Spring容器中</span><br><span class=\"line\">\t@ConditionalOnMissingBean：容器中不存在当前bean，才会把bean放到Spring容器中</span><br><span class=\"line\">\t@ConditionalOnProperty：配置文件中存在指定的属性名和属性值，才会把bean放到Spring容器中</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何自定义starter</span><br><span class=\"line\">\t1. 编写依赖管理模块（starter），引入依赖即可</span><br><span class=\"line\">\t2. 编写自动配置模块（autoConfiguer），在starter中引入autoConfiguer模块</span><br><span class=\"line\">\t3. 在自动配置模块中编写 </span><br><span class=\"line\">\t\t\t自动配置文件（META-INF/spring/xxxAutoConfiguration.imports）</span><br><span class=\"line\">\t\t\t自动配置类 （在xxxAutoConfiguration使用@Bean注解把类对应的对象放到Spring容器中）</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Day15-MybatisPlus\"><a href=\"#Day15-MybatisPlus\" class=\"headerlink\" title=\"Day15 - MybatisPlus\"></a>Day15 - MybatisPlus</h1><h2 id=\"1-入门案例\"><a href=\"#1-入门案例\" class=\"headerlink\" title=\"1. 入门案例\"></a>1. 入门案例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">入门案例步骤</span><br><span class=\"line\">\t1. 准备工作：数据库表、创建模块（导入依赖、修改配置文件中的数据库连接信息、添加实体类）</span><br><span class=\"line\">\t2. 编写UserDao, 继承BaseMapper&lt;User&gt;, 添加@Mapper</span><br><span class=\"line\">\t3. 测试</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-标准CRUD操作\"><a href=\"#2-标准CRUD操作\" class=\"headerlink\" title=\"2. 标准CRUD操作\"></a>2. 标准CRUD操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">新增：insert</span><br><span class=\"line\">根据id删除：deleteById</span><br><span class=\"line\">根据id修改：updateById</span><br><span class=\"line\">根据id查询: selectById</span><br><span class=\"line\">查列表： selectList</span><br><span class=\"line\">查分页：selectPage  添加分页拦截器</span><br><span class=\"line\"></span><br><span class=\"line\">查询投影：selectMaps</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-按条件查询\"><a href=\"#3-按条件查询\" class=\"headerlink\" title=\"3. 按条件查询\"></a>3. 按条件查询</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;\tgt</span><br><span class=\"line\">&gt;=\tge</span><br><span class=\"line\">&lt;\tlt</span><br><span class=\"line\">&lt;=\tle</span><br><span class=\"line\">=\teq</span><br><span class=\"line\">范围查询：between and</span><br><span class=\"line\">模糊查询：like</span><br><span class=\"line\">包含：in</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-批量操作\"><a href=\"#4-批量操作\" class=\"headerlink\" title=\"4. 批量操作\"></a>4. 批量操作</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">根据id批量查询：selectBatchById</span><br><span class=\"line\">根据id批量删除：deleteBatchById</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-兼容性匹配\"><a href=\"#5-兼容性匹配\" class=\"headerlink\" title=\"5. 兼容性匹配\"></a>5. 兼容性匹配</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据库表名 和 实体类名不一致：@TableName</span><br><span class=\"line\">数据库字段名 和 实体类属性名不一致：@TableField(value=&quot;&quot;)</span><br><span class=\"line\">设置不查询某字段：@TableField(select=false)</span><br><span class=\"line\">设置实体类属性名在数据库中不存在：@TableField(exist=false)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"6-id生成策略\"><a href=\"#6-id生成策略\" class=\"headerlink\" title=\"6. id生成策略\"></a>6. id生成策略</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id生成策略注解：@TableId</span><br><span class=\"line\">全局配置：id-type</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id生成策略有哪些？</span><br><span class=\"line\">\tAuto、Assign-id</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"7-逻辑删除\"><a href=\"#7-逻辑删除\" class=\"headerlink\" title=\"7. 逻辑删除\"></a>7. 逻辑删除</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">逻辑删除注解：</span><br><span class=\"line\">\t@TableLogic(value=&quot;0&quot;，delval=&quot;1&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">步骤：</span><br><span class=\"line\">\t1.添加字段</span><br><span class=\"line\">\t2.添加注解</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"8-乐观锁\"><a href=\"#8-乐观锁\" class=\"headerlink\" title=\"8. 乐观锁\"></a>8. 乐观锁</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">步骤：</span><br><span class=\"line\">\t1.添加字段 version 和 添加 @Version注解</span><br><span class=\"line\">\t2.添加乐观锁拦截器</span><br><span class=\"line\">\t3.查询数据库中的数据和版本号，调用修改操作，把要修改的数据和刚才查询出来的版本号都设置进去</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Day16-Maven高级\"><a href=\"#Day16-Maven高级\" class=\"headerlink\" title=\"Day16 - Maven高级\"></a>Day16 - Maven高级</h1><h2 id=\"1-分模块开发\"><a href=\"#1-分模块开发\" class=\"headerlink\" title=\"1. 分模块开发\"></a>1. 分模块开发</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分模块开发的好处？</span><br><span class=\"line\">\t解耦、便于开发、便于维护、便于复用</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何分模块开发？</span><br><span class=\"line\">\t水平拆分：分层拆分</span><br><span class=\"line\">\t垂直拆分：按业务拆分</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在A模块中使用B模块？</span><br><span class=\"line\">\t&lt;dependency&gt;引入即可</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-继承\"><a href=\"#2-继承\" class=\"headerlink\" title=\"2. 继承\"></a>2. 继承</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">继承的作用？\t</span><br><span class=\"line\">\t简化了依赖配置</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何实现继承？</span><br><span class=\"line\">\t1. 在父pom文件中设置打包方式为pom  &lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class=\"line\">\t2. 在子模块中使用&lt;parent&gt;标签设置父模块</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencyManagement&gt;和&lt;dependencies&gt;的区别</span><br><span class=\"line\">\t&lt;dependencyManagement&gt;：锁定版本号，并没有真正引入依赖。可以减少依赖冲突</span><br><span class=\"line\">\t&lt;dependencies&gt;: 真正引入依赖</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;标签的作用？</span><br><span class=\"line\">\t配置pom文件中的属性/变量，使用变量$&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-聚合\"><a href=\"#3-聚合\" class=\"headerlink\" title=\"3. 聚合\"></a>3. 聚合</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">聚合的作用？</span><br><span class=\"line\">\t构建聚合工程的时候，子工程也会跟着构建</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何用聚合实现多工程统一构建？</span><br><span class=\"line\">\t在聚合工程中使用&lt;modules&gt;设置聚合工程有几个子工程</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">聚合和继承的区别？</span><br><span class=\"line\">\t继承：子模块继承父模块的依赖和配置，在子模块中配置继承关系</span><br><span class=\"line\">\t聚合：工程的统一构建，在聚合工程中配置聚合关系</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-私服\"><a href=\"#4-私服\" class=\"headerlink\" title=\"4. 私服\"></a>4. 私服</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">私服的作用？</span><br><span class=\"line\">\t团队间的资源共享</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下载：在setting.xml中配置 用户名密码(&lt;server&gt;)、私服仓库的镜像（&lt;mirrors&gt; url）</span><br><span class=\"line\">上传：在pom.xml文件中配置私服的url路径，点击 install、deploy就可以上传依赖到私服了</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":[],"tags":[{"name":"web","path":"api/tags/web.json"}]}