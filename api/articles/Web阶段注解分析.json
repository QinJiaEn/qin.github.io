{"title":"Web阶段注解分析","slug":"Web阶段注解分析","date":"2023-05-16T08:57:21.000Z","updated":"2023-05-16T09:22:40.649Z","comments":true,"path":"api/articles/Web阶段注解分析.json","excerpt":null,"covers":null,"content":"<h1 id=\"RequestParam-PathVariable和-RequestBody三者区别\"><a href=\"#RequestParam-PathVariable和-RequestBody三者区别\" class=\"headerlink\" title=\"@RequestParam,@PathVariable和@RequestBody三者区别\"></a>@RequestParam,@PathVariable和@RequestBody三者区别</h1><h4 id=\"PathVariable\"><a href=\"#PathVariable\" class=\"headerlink\" title=\"@PathVariable\"></a>@PathVariable</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">顾名思义：路径变量，即是获取链接url路径上的变量</span><br><span class=\"line\">  例如</span><br><span class=\"line\">\thttp:<span class=\"comment\">//localhost:8090/hello/2</span></span><br><span class=\"line\">  代码</span><br><span class=\"line\"><span class=\"comment\">//使用@PathVariable注解获取id</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello/&#123;id&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> Integer id)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//则   id的值为2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注意：\t路径变量名要与参数名要一致</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"RequestParam\"><a href=\"#RequestParam\" class=\"headerlink\" title=\"@RequestParam\"></a>@RequestParam</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">顾名思义：获取参数，即是获取传送过来的参数；例如获取下面链接的id参数值</span><br><span class=\"line\">  例如</span><br><span class=\"line\">\thttp:<span class=\"comment\">//localhost:8090/hello?id=2</span></span><br><span class=\"line\">  代码</span><br><span class=\"line\"><span class=\"comment\">//使用@RequestParam注解获取id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> String id)</span></span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;链接中请求参数的id：&quot;</span>+id);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//此时@RequestParam的作用就可以获取id下来并且作为形参传给方法体里面的id</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"RequestBody注解\"><a href=\"#RequestBody注解\" class=\"headerlink\" title=\"@RequestBody注解\"></a>@RequestBody注解</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先说下，<span class=\"meta\">@RequestBody</span>注解一般主要是用来处理content-type:<span class=\"string\">&quot;application/json charset=utf-8&quot;</span>或者content-type:<span class=\"string\">&quot;application/xml charset=utf-8&quot;</span>两种请求数据，一般是异步请求用的比较多些，简而言之就是json和xml。</span><br><span class=\"line\">    例如</span><br><span class=\"line\"><span class=\"comment\">//异步请求部分代码</span></span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">　　　　　url:<span class=\"string\">&quot;/hello&quot;</span>,</span><br><span class=\"line\">　　　　　type:<span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">　　　　　data:<span class=\"string\">&#x27;&#123;&quot;id&quot;:&quot;123&quot;,&quot;name&quot;:&quot;Mr.Q&quot;&#125;&#x27;</span>,</span><br><span class=\"line\">　　　　　content-type:<span class=\"string\">&quot;application/json charset=utf-8&quot;</span>,</span><br><span class=\"line\">　　　　　success:function(data)&#123;</span><br><span class=\"line\">　　　　　　　alert(data);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//@RequestBody注解获取数据代码</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> Integer id,<span class=\"meta\">@RequestBody</span> String name)</span></span>&#123;</span><br><span class=\"line\">　　　　System.out.println(<span class=\"string\">&quot;id:&quot;</span>+id+<span class=\"string\">&quot;;&quot;</span>+<span class=\"string\">&quot;name:&quot;</span>+name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//需要注意的是 如果有一个User类的话（类中包含id和name的成员变量）</span></span><br><span class=\"line\"><span class=\"comment\">//那么代码可以写为</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> User user)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 此时user中就封装了id和name　　　　　</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","more":"<h1 id=\"RequestParam-PathVariable和-RequestBody三者区别\"><a href=\"#RequestParam-PathVariable和-RequestBody三者区别\" class=\"headerlink\" title=\"@RequestParam,@PathVariable和@RequestBody三者区别\"></a>@RequestParam,@PathVariable和@RequestBody三者区别</h1><h4 id=\"PathVariable\"><a href=\"#PathVariable\" class=\"headerlink\" title=\"@PathVariable\"></a>@PathVariable</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">顾名思义：路径变量，即是获取链接url路径上的变量</span><br><span class=\"line\">  例如</span><br><span class=\"line\">\thttp:<span class=\"comment\">//localhost:8090/hello/2</span></span><br><span class=\"line\">  代码</span><br><span class=\"line\"><span class=\"comment\">//使用@PathVariable注解获取id</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello/&#123;id&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> Integer id)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//则   id的值为2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注意：\t路径变量名要与参数名要一致</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"RequestParam\"><a href=\"#RequestParam\" class=\"headerlink\" title=\"@RequestParam\"></a>@RequestParam</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">顾名思义：获取参数，即是获取传送过来的参数；例如获取下面链接的id参数值</span><br><span class=\"line\">  例如</span><br><span class=\"line\">\thttp:<span class=\"comment\">//localhost:8090/hello?id=2</span></span><br><span class=\"line\">  代码</span><br><span class=\"line\"><span class=\"comment\">//使用@RequestParam注解获取id</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> String id)</span></span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;链接中请求参数的id：&quot;</span>+id);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//此时@RequestParam的作用就可以获取id下来并且作为形参传给方法体里面的id</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"RequestBody注解\"><a href=\"#RequestBody注解\" class=\"headerlink\" title=\"@RequestBody注解\"></a>@RequestBody注解</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先说下，<span class=\"meta\">@RequestBody</span>注解一般主要是用来处理content-type:<span class=\"string\">&quot;application/json charset=utf-8&quot;</span>或者content-type:<span class=\"string\">&quot;application/xml charset=utf-8&quot;</span>两种请求数据，一般是异步请求用的比较多些，简而言之就是json和xml。</span><br><span class=\"line\">    例如</span><br><span class=\"line\"><span class=\"comment\">//异步请求部分代码</span></span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">　　　　　url:<span class=\"string\">&quot;/hello&quot;</span>,</span><br><span class=\"line\">　　　　　type:<span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">　　　　　data:<span class=\"string\">&#x27;&#123;&quot;id&quot;:&quot;123&quot;,&quot;name&quot;:&quot;Mr.Q&quot;&#125;&#x27;</span>,</span><br><span class=\"line\">　　　　　content-type:<span class=\"string\">&quot;application/json charset=utf-8&quot;</span>,</span><br><span class=\"line\">　　　　　success:function(data)&#123;</span><br><span class=\"line\">　　　　　　　alert(data);</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//@RequestBody注解获取数据代码</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> Integer id,<span class=\"meta\">@RequestBody</span> String name)</span></span>&#123;</span><br><span class=\"line\">　　　　System.out.println(<span class=\"string\">&quot;id:&quot;</span>+id+<span class=\"string\">&quot;;&quot;</span>+<span class=\"string\">&quot;name:&quot;</span>+name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//需要注意的是 如果有一个User类的话（类中包含id和name的成员变量）</span></span><br><span class=\"line\"><span class=\"comment\">//那么代码可以写为</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> User user)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 此时user中就封装了id和name　　　　　</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":[],"tags":[{"name":"注解","path":"api/tags/注解.json"}]}